#include <cmath>
#include "tensors.h"
#include "IniParams.h"


void D2FluxFunc(const dTensor2& xpts, 
        const dTensor2& Q,
        const dTensor2& Aux,
        dTensor5& D2flux)
{
    using std::pow;
    const int numpts = xpts.getsize(1);
    const int meqn   = Q.getsize(2);

    const double gamma = global_ini_params.get_gamma();

    D2flux.setall(0.);
    for (int i=1; i<=numpts; i++)
    {
        double q1 = Q.get(i,1);
        double q2 = Q.get(i,2);
        double q3 = Q.get(i,3);
        double q4 = Q.get(i,4);
        double q5 = Q.get(i,5);
        double q6 = Q.get(i,6);
        double q7 = Q.get(i,7);
        double q8 = Q.get(i,8);

        //****HESSIAN****
        //Computing the Hessian of the flux function: f''(q)

        D2flux.set(i,1,1,1,1, 0);
        D2flux.set(i,1,1,2,1, 0);
        D2flux.set(i,1,1,3,1, 0);
        D2flux.set(i,1,1,4,1, 0);
        D2flux.set(i,1,1,5,1, 0);
        D2flux.set(i,1,1,6,1, 0);
        D2flux.set(i,1,1,7,1, 0);
        D2flux.set(i,1,1,8,1, 0);
        D2flux.set(i,1,2,1,1, 0);
        D2flux.set(i,1,2,2,1, 0);
        D2flux.set(i,1,2,3,1, 0);
        D2flux.set(i,1,2,4,1, 0);
        D2flux.set(i,1,2,5,1, 0);
        D2flux.set(i,1,2,6,1, 0);
        D2flux.set(i,1,2,7,1, 0);
        D2flux.set(i,1,2,8,1, 0);
        D2flux.set(i,1,3,1,1, 0);
        D2flux.set(i,1,3,2,1, 0);
        D2flux.set(i,1,3,3,1, 0);
        D2flux.set(i,1,3,4,1, 0);
        D2flux.set(i,1,3,5,1, 0);
        D2flux.set(i,1,3,6,1, 0);
        D2flux.set(i,1,3,7,1, 0);
        D2flux.set(i,1,3,8,1, 0);
        D2flux.set(i,1,4,1,1, 0);
        D2flux.set(i,1,4,2,1, 0);
        D2flux.set(i,1,4,3,1, 0);
        D2flux.set(i,1,4,4,1, 0);
        D2flux.set(i,1,4,5,1, 0);
        D2flux.set(i,1,4,6,1, 0);
        D2flux.set(i,1,4,7,1, 0);
        D2flux.set(i,1,4,8,1, 0);
        D2flux.set(i,1,5,1,1, 0);
        D2flux.set(i,1,5,2,1, 0);
        D2flux.set(i,1,5,3,1, 0);
        D2flux.set(i,1,5,4,1, 0);
        D2flux.set(i,1,5,5,1, 0);
        D2flux.set(i,1,5,6,1, 0);
        D2flux.set(i,1,5,7,1, 0);
        D2flux.set(i,1,5,8,1, 0);
        D2flux.set(i,1,6,1,1, 0);
        D2flux.set(i,1,6,2,1, 0);
        D2flux.set(i,1,6,3,1, 0);
        D2flux.set(i,1,6,4,1, 0);
        D2flux.set(i,1,6,5,1, 0);
        D2flux.set(i,1,6,6,1, 0);
        D2flux.set(i,1,6,7,1, 0);
        D2flux.set(i,1,6,8,1, 0);
        D2flux.set(i,1,7,1,1, 0);
        D2flux.set(i,1,7,2,1, 0);
        D2flux.set(i,1,7,3,1, 0);
        D2flux.set(i,1,7,4,1, 0);
        D2flux.set(i,1,7,5,1, 0);
        D2flux.set(i,1,7,6,1, 0);
        D2flux.set(i,1,7,7,1, 0);
        D2flux.set(i,1,7,8,1, 0);
        D2flux.set(i,1,8,1,1, 0);
        D2flux.set(i,1,8,2,1, 0);
        D2flux.set(i,1,8,3,1, 0);
        D2flux.set(i,1,8,4,1, 0);
        D2flux.set(i,1,8,5,1, 0);
        D2flux.set(i,1,8,6,1, 0);
        D2flux.set(i,1,8,7,1, 0);
        D2flux.set(i,1,8,8,1, 0);

        D2flux.set(i,2,1,1,1, -gamma*pow( q2, 2 )/pow( q1, 3 ) - gamma*pow( q3, 2 )/pow( q1, 3 ) - gamma*pow( q4, 2 )/pow( q1, 3 ) + 3*pow( q2, 2 )/pow( q1, 3 ) + pow( q3, 2 )/pow( q1, 3 ) + pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,2,1,2,1, gamma*q2/pow( q1, 2 ) - 3*q2/pow( q1, 2 ));
        D2flux.set(i,2,1,3,1, gamma*q3/pow( q1, 2 ) - q3/pow( q1, 2 ));
        D2flux.set(i,2,1,4,1, gamma*q4/pow( q1, 2 ) - q4/pow( q1, 2 ));
        D2flux.set(i,2,1,5,1, 0);
        D2flux.set(i,2,1,6,1, 0);
        D2flux.set(i,2,1,7,1, 0);
        D2flux.set(i,2,1,8,1, 0);
        D2flux.set(i,2,2,1,1, gamma*q2/pow( q1, 2 ) - 3*q2/pow( q1, 2 ));
        D2flux.set(i,2,2,2,1, -gamma/q1 + 3/q1);
        D2flux.set(i,2,2,3,1, 0);
        D2flux.set(i,2,2,4,1, 0);
        D2flux.set(i,2,2,5,1, 0);
        D2flux.set(i,2,2,6,1, 0);
        D2flux.set(i,2,2,7,1, 0);
        D2flux.set(i,2,2,8,1, 0);
        D2flux.set(i,2,3,1,1, gamma*q3/pow( q1, 2 ) - q3/pow( q1, 2 ));
        D2flux.set(i,2,3,2,1, 0);
        D2flux.set(i,2,3,3,1, -gamma/q1 + 1/q1);
        D2flux.set(i,2,3,4,1, 0);
        D2flux.set(i,2,3,5,1, 0);
        D2flux.set(i,2,3,6,1, 0);
        D2flux.set(i,2,3,7,1, 0);
        D2flux.set(i,2,3,8,1, 0);
        D2flux.set(i,2,4,1,1, gamma*q4/pow( q1, 2 ) - q4/pow( q1, 2 ));
        D2flux.set(i,2,4,2,1, 0);
        D2flux.set(i,2,4,3,1, 0);
        D2flux.set(i,2,4,4,1, -gamma/q1 + 1/q1);
        D2flux.set(i,2,4,5,1, 0);
        D2flux.set(i,2,4,6,1, 0);
        D2flux.set(i,2,4,7,1, 0);
        D2flux.set(i,2,4,8,1, 0);
        D2flux.set(i,2,5,1,1, 0);
        D2flux.set(i,2,5,2,1, 0);
        D2flux.set(i,2,5,3,1, 0);
        D2flux.set(i,2,5,4,1, 0);
        D2flux.set(i,2,5,5,1, 0);
        D2flux.set(i,2,5,6,1, 0);
        D2flux.set(i,2,5,7,1, 0);
        D2flux.set(i,2,5,8,1, 0);
        D2flux.set(i,2,6,1,1, 0);
        D2flux.set(i,2,6,2,1, 0);
        D2flux.set(i,2,6,3,1, 0);
        D2flux.set(i,2,6,4,1, 0);
        D2flux.set(i,2,6,5,1, 0);
        D2flux.set(i,2,6,6,1, -gamma);
        D2flux.set(i,2,6,7,1, 0);
        D2flux.set(i,2,6,8,1, 0);
        D2flux.set(i,2,7,1,1, 0);
        D2flux.set(i,2,7,2,1, 0);
        D2flux.set(i,2,7,3,1, 0);
        D2flux.set(i,2,7,4,1, 0);
        D2flux.set(i,2,7,5,1, 0);
        D2flux.set(i,2,7,6,1, 0);
        D2flux.set(i,2,7,7,1, -gamma + 2);
        D2flux.set(i,2,7,8,1, 0);
        D2flux.set(i,2,8,1,1, 0);
        D2flux.set(i,2,8,2,1, 0);
        D2flux.set(i,2,8,3,1, 0);
        D2flux.set(i,2,8,4,1, 0);
        D2flux.set(i,2,8,5,1, 0);
        D2flux.set(i,2,8,6,1, 0);
        D2flux.set(i,2,8,7,1, 0);
        D2flux.set(i,2,8,8,1, -gamma + 2);

        D2flux.set(i,3,1,1,1, 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,3,1,2,1, -q3/pow( q1, 2 ));
        D2flux.set(i,3,1,3,1, -q2/pow( q1, 2 ));
        D2flux.set(i,3,1,4,1, 0);
        D2flux.set(i,3,1,5,1, 0);
        D2flux.set(i,3,1,6,1, 0);
        D2flux.set(i,3,1,7,1, 0);
        D2flux.set(i,3,1,8,1, 0);
        D2flux.set(i,3,2,1,1, -q3/pow( q1, 2 ));
        D2flux.set(i,3,2,2,1, 0);
        D2flux.set(i,3,2,3,1, 1/q1);
        D2flux.set(i,3,2,4,1, 0);
        D2flux.set(i,3,2,5,1, 0);
        D2flux.set(i,3,2,6,1, 0);
        D2flux.set(i,3,2,7,1, 0);
        D2flux.set(i,3,2,8,1, 0);
        D2flux.set(i,3,3,1,1, -q2/pow( q1, 2 ));
        D2flux.set(i,3,3,2,1, 1/q1);
        D2flux.set(i,3,3,3,1, 0);
        D2flux.set(i,3,3,4,1, 0);
        D2flux.set(i,3,3,5,1, 0);
        D2flux.set(i,3,3,6,1, 0);
        D2flux.set(i,3,3,7,1, 0);
        D2flux.set(i,3,3,8,1, 0);
        D2flux.set(i,3,4,1,1, 0);
        D2flux.set(i,3,4,2,1, 0);
        D2flux.set(i,3,4,3,1, 0);
        D2flux.set(i,3,4,4,1, 0);
        D2flux.set(i,3,4,5,1, 0);
        D2flux.set(i,3,4,6,1, 0);
        D2flux.set(i,3,4,7,1, 0);
        D2flux.set(i,3,4,8,1, 0);
        D2flux.set(i,3,5,1,1, 0);
        D2flux.set(i,3,5,2,1, 0);
        D2flux.set(i,3,5,3,1, 0);
        D2flux.set(i,3,5,4,1, 0);
        D2flux.set(i,3,5,5,1, 0);
        D2flux.set(i,3,5,6,1, 0);
        D2flux.set(i,3,5,7,1, 0);
        D2flux.set(i,3,5,8,1, 0);
        D2flux.set(i,3,6,1,1, 0);
        D2flux.set(i,3,6,2,1, 0);
        D2flux.set(i,3,6,3,1, 0);
        D2flux.set(i,3,6,4,1, 0);
        D2flux.set(i,3,6,5,1, 0);
        D2flux.set(i,3,6,6,1, 0);
        D2flux.set(i,3,6,7,1, -1);
        D2flux.set(i,3,6,8,1, 0);
        D2flux.set(i,3,7,1,1, 0);
        D2flux.set(i,3,7,2,1, 0);
        D2flux.set(i,3,7,3,1, 0);
        D2flux.set(i,3,7,4,1, 0);
        D2flux.set(i,3,7,5,1, 0);
        D2flux.set(i,3,7,6,1, -1);
        D2flux.set(i,3,7,7,1, 0);
        D2flux.set(i,3,7,8,1, 0);
        D2flux.set(i,3,8,1,1, 0);
        D2flux.set(i,3,8,2,1, 0);
        D2flux.set(i,3,8,3,1, 0);
        D2flux.set(i,3,8,4,1, 0);
        D2flux.set(i,3,8,5,1, 0);
        D2flux.set(i,3,8,6,1, 0);
        D2flux.set(i,3,8,7,1, 0);
        D2flux.set(i,3,8,8,1, 0);

        D2flux.set(i,4,1,1,1, 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,4,1,2,1, -q4/pow( q1, 2 ));
        D2flux.set(i,4,1,3,1, 0);
        D2flux.set(i,4,1,4,1, -q2/pow( q1, 2 ));
        D2flux.set(i,4,1,5,1, 0);
        D2flux.set(i,4,1,6,1, 0);
        D2flux.set(i,4,1,7,1, 0);
        D2flux.set(i,4,1,8,1, 0);
        D2flux.set(i,4,2,1,1, -q4/pow( q1, 2 ));
        D2flux.set(i,4,2,2,1, 0);
        D2flux.set(i,4,2,3,1, 0);
        D2flux.set(i,4,2,4,1, 1/q1);
        D2flux.set(i,4,2,5,1, 0);
        D2flux.set(i,4,2,6,1, 0);
        D2flux.set(i,4,2,7,1, 0);
        D2flux.set(i,4,2,8,1, 0);
        D2flux.set(i,4,3,1,1, 0);
        D2flux.set(i,4,3,2,1, 0);
        D2flux.set(i,4,3,3,1, 0);
        D2flux.set(i,4,3,4,1, 0);
        D2flux.set(i,4,3,5,1, 0);
        D2flux.set(i,4,3,6,1, 0);
        D2flux.set(i,4,3,7,1, 0);
        D2flux.set(i,4,3,8,1, 0);
        D2flux.set(i,4,4,1,1, -q2/pow( q1, 2 ));
        D2flux.set(i,4,4,2,1, 1/q1);
        D2flux.set(i,4,4,3,1, 0);
        D2flux.set(i,4,4,4,1, 0);
        D2flux.set(i,4,4,5,1, 0);
        D2flux.set(i,4,4,6,1, 0);
        D2flux.set(i,4,4,7,1, 0);
        D2flux.set(i,4,4,8,1, 0);
        D2flux.set(i,4,5,1,1, 0);
        D2flux.set(i,4,5,2,1, 0);
        D2flux.set(i,4,5,3,1, 0);
        D2flux.set(i,4,5,4,1, 0);
        D2flux.set(i,4,5,5,1, 0);
        D2flux.set(i,4,5,6,1, 0);
        D2flux.set(i,4,5,7,1, 0);
        D2flux.set(i,4,5,8,1, 0);
        D2flux.set(i,4,6,1,1, 0);
        D2flux.set(i,4,6,2,1, 0);
        D2flux.set(i,4,6,3,1, 0);
        D2flux.set(i,4,6,4,1, 0);
        D2flux.set(i,4,6,5,1, 0);
        D2flux.set(i,4,6,6,1, 0);
        D2flux.set(i,4,6,7,1, 0);
        D2flux.set(i,4,6,8,1, -1);
        D2flux.set(i,4,7,1,1, 0);
        D2flux.set(i,4,7,2,1, 0);
        D2flux.set(i,4,7,3,1, 0);
        D2flux.set(i,4,7,4,1, 0);
        D2flux.set(i,4,7,5,1, 0);
        D2flux.set(i,4,7,6,1, 0);
        D2flux.set(i,4,7,7,1, 0);
        D2flux.set(i,4,7,8,1, 0);
        D2flux.set(i,4,8,1,1, 0);
        D2flux.set(i,4,8,2,1, 0);
        D2flux.set(i,4,8,3,1, 0);
        D2flux.set(i,4,8,4,1, 0);
        D2flux.set(i,4,8,5,1, 0);
        D2flux.set(i,4,8,6,1, -1);
        D2flux.set(i,4,8,7,1, 0);
        D2flux.set(i,4,8,8,1, 0);

        D2flux.set(i,5,1,1,1, 2*gamma*q2*q5/pow( q1, 3 ) - gamma*q2*pow( q6, 2 )/pow( q1, 3 ) - gamma*q2*pow( q7, 2 )/pow( q1, 3 ) - gamma*q2*pow( q8, 2 )/pow( q1, 3 ) - 3*gamma*pow( q2, 3 )/pow( q1, 4 ) - 3*gamma*q2*pow( q3, 2 )/pow( q1, 4 ) - 3*gamma*q2*pow( q4, 2 )/pow( q1, 4 ) + 2*q2*pow( q7, 2 )/pow( q1, 3 ) + 2*q2*pow( q8, 2 )/pow( q1, 3 ) - 2*q3*q6*q7/pow( q1, 3 ) - 2*q4*q6*q8/pow( q1, 3 ) + 3*pow( q2, 3 )/pow( q1, 4 ) + 3*q2*pow( q3, 2 )/pow( q1, 4 ) + 3*q2*pow( q4, 2 )/pow( q1, 4 ));
        D2flux.set(i,5,1,2,1, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + 3*gamma*pow( q2, 2 )/pow( q1, 3 ) + gamma*pow( q3, 2 )/pow( q1, 3 ) + gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q7, 2 )/pow( q1, 2 ) - pow( q8, 2 )/pow( q1, 2 ) - 3*pow( q2, 2 )/pow( q1, 3 ) - pow( q3, 2 )/pow( q1, 3 ) - pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,1,3,1, 2*gamma*q2*q3/pow( q1, 3 ) + q6*q7/pow( q1, 2 ) - 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,5,1,4,1, 2*gamma*q2*q4/pow( q1, 3 ) + q6*q8/pow( q1, 2 ) - 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,5,1,5,1, -gamma*q2/pow( q1, 2 ));
        D2flux.set(i,5,1,6,1, gamma*q2*q6/pow( q1, 2 ) + q3*q7/pow( q1, 2 ) + q4*q8/pow( q1, 2 ));
        D2flux.set(i,5,1,7,1, gamma*q2*q7/pow( q1, 2 ) - 2*q2*q7/pow( q1, 2 ) + q3*q6/pow( q1, 2 ));
        D2flux.set(i,5,1,8,1, gamma*q2*q8/pow( q1, 2 ) - 2*q2*q8/pow( q1, 2 ) + q4*q6/pow( q1, 2 ));
        D2flux.set(i,5,2,1,1, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + 3*gamma*pow( q2, 2 )/pow( q1, 3 ) + gamma*pow( q3, 2 )/pow( q1, 3 ) + gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q7, 2 )/pow( q1, 2 ) - pow( q8, 2 )/pow( q1, 2 ) - 3*pow( q2, 2 )/pow( q1, 3 ) - pow( q3, 2 )/pow( q1, 3 ) - pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,2,2,1, -3*gamma*q2/pow( q1, 2 ) + 3*q2/pow( q1, 2 ));
        D2flux.set(i,5,2,3,1, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,2,4,1, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,2,5,1, gamma/q1);
        D2flux.set(i,5,2,6,1, -gamma*q6/q1);
        D2flux.set(i,5,2,7,1, -gamma*q7/q1 + 2*q7/q1);
        D2flux.set(i,5,2,8,1, -gamma*q8/q1 + 2*q8/q1);
        D2flux.set(i,5,3,1,1, 2*gamma*q2*q3/pow( q1, 3 ) + q6*q7/pow( q1, 2 ) - 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,5,3,2,1, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,3,3,1, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,3,4,1, 0);
        D2flux.set(i,5,3,5,1, 0);
        D2flux.set(i,5,3,6,1, -q7/q1);
        D2flux.set(i,5,3,7,1, -q6/q1);
        D2flux.set(i,5,3,8,1, 0);
        D2flux.set(i,5,4,1,1, 2*gamma*q2*q4/pow( q1, 3 ) + q6*q8/pow( q1, 2 ) - 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,5,4,2,1, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,4,3,1, 0);
        D2flux.set(i,5,4,4,1, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,4,5,1, 0);
        D2flux.set(i,5,4,6,1, -q8/q1);
        D2flux.set(i,5,4,7,1, 0);
        D2flux.set(i,5,4,8,1, -q6/q1);
        D2flux.set(i,5,5,1,1, -gamma*q2/pow( q1, 2 ));
        D2flux.set(i,5,5,2,1, gamma/q1);
        D2flux.set(i,5,5,3,1, 0);
        D2flux.set(i,5,5,4,1, 0);
        D2flux.set(i,5,5,5,1, 0);
        D2flux.set(i,5,5,6,1, 0);
        D2flux.set(i,5,5,7,1, 0);
        D2flux.set(i,5,5,8,1, 0);
        D2flux.set(i,5,6,1,1, gamma*q2*q6/pow( q1, 2 ) + q3*q7/pow( q1, 2 ) + q4*q8/pow( q1, 2 ));
        D2flux.set(i,5,6,2,1, -gamma*q6/q1);
        D2flux.set(i,5,6,3,1, -q7/q1);
        D2flux.set(i,5,6,4,1, -q8/q1);
        D2flux.set(i,5,6,5,1, 0);
        D2flux.set(i,5,6,6,1, -gamma*q2/q1);
        D2flux.set(i,5,6,7,1, -q3/q1);
        D2flux.set(i,5,6,8,1, -q4/q1);
        D2flux.set(i,5,7,1,1, gamma*q2*q7/pow( q1, 2 ) - 2*q2*q7/pow( q1, 2 ) + q3*q6/pow( q1, 2 ));
        D2flux.set(i,5,7,2,1, -gamma*q7/q1 + 2*q7/q1);
        D2flux.set(i,5,7,3,1, -q6/q1);
        D2flux.set(i,5,7,4,1, 0);
        D2flux.set(i,5,7,5,1, 0);
        D2flux.set(i,5,7,6,1, -q3/q1);
        D2flux.set(i,5,7,7,1, -gamma*q2/q1 + 2*q2/q1);
        D2flux.set(i,5,7,8,1, 0);
        D2flux.set(i,5,8,1,1, gamma*q2*q8/pow( q1, 2 ) - 2*q2*q8/pow( q1, 2 ) + q4*q6/pow( q1, 2 ));
        D2flux.set(i,5,8,2,1, -gamma*q8/q1 + 2*q8/q1);
        D2flux.set(i,5,8,3,1, 0);
        D2flux.set(i,5,8,4,1, -q6/q1);
        D2flux.set(i,5,8,5,1, 0);
        D2flux.set(i,5,8,6,1, -q4/q1);
        D2flux.set(i,5,8,7,1, 0);
        D2flux.set(i,5,8,8,1, -gamma*q2/q1 + 2*q2/q1);

        D2flux.set(i,6,1,1,1, 0);
        D2flux.set(i,6,1,2,1, 0);
        D2flux.set(i,6,1,3,1, 0);
        D2flux.set(i,6,1,4,1, 0);
        D2flux.set(i,6,1,5,1, 0);
        D2flux.set(i,6,1,6,1, 0);
        D2flux.set(i,6,1,7,1, 0);
        D2flux.set(i,6,1,8,1, 0);
        D2flux.set(i,6,2,1,1, 0);
        D2flux.set(i,6,2,2,1, 0);
        D2flux.set(i,6,2,3,1, 0);
        D2flux.set(i,6,2,4,1, 0);
        D2flux.set(i,6,2,5,1, 0);
        D2flux.set(i,6,2,6,1, 0);
        D2flux.set(i,6,2,7,1, 0);
        D2flux.set(i,6,2,8,1, 0);
        D2flux.set(i,6,3,1,1, 0);
        D2flux.set(i,6,3,2,1, 0);
        D2flux.set(i,6,3,3,1, 0);
        D2flux.set(i,6,3,4,1, 0);
        D2flux.set(i,6,3,5,1, 0);
        D2flux.set(i,6,3,6,1, 0);
        D2flux.set(i,6,3,7,1, 0);
        D2flux.set(i,6,3,8,1, 0);
        D2flux.set(i,6,4,1,1, 0);
        D2flux.set(i,6,4,2,1, 0);
        D2flux.set(i,6,4,3,1, 0);
        D2flux.set(i,6,4,4,1, 0);
        D2flux.set(i,6,4,5,1, 0);
        D2flux.set(i,6,4,6,1, 0);
        D2flux.set(i,6,4,7,1, 0);
        D2flux.set(i,6,4,8,1, 0);
        D2flux.set(i,6,5,1,1, 0);
        D2flux.set(i,6,5,2,1, 0);
        D2flux.set(i,6,5,3,1, 0);
        D2flux.set(i,6,5,4,1, 0);
        D2flux.set(i,6,5,5,1, 0);
        D2flux.set(i,6,5,6,1, 0);
        D2flux.set(i,6,5,7,1, 0);
        D2flux.set(i,6,5,8,1, 0);
        D2flux.set(i,6,6,1,1, 0);
        D2flux.set(i,6,6,2,1, 0);
        D2flux.set(i,6,6,3,1, 0);
        D2flux.set(i,6,6,4,1, 0);
        D2flux.set(i,6,6,5,1, 0);
        D2flux.set(i,6,6,6,1, 0);
        D2flux.set(i,6,6,7,1, 0);
        D2flux.set(i,6,6,8,1, 0);
        D2flux.set(i,6,7,1,1, 0);
        D2flux.set(i,6,7,2,1, 0);
        D2flux.set(i,6,7,3,1, 0);
        D2flux.set(i,6,7,4,1, 0);
        D2flux.set(i,6,7,5,1, 0);
        D2flux.set(i,6,7,6,1, 0);
        D2flux.set(i,6,7,7,1, 0);
        D2flux.set(i,6,7,8,1, 0);
        D2flux.set(i,6,8,1,1, 0);
        D2flux.set(i,6,8,2,1, 0);
        D2flux.set(i,6,8,3,1, 0);
        D2flux.set(i,6,8,4,1, 0);
        D2flux.set(i,6,8,5,1, 0);
        D2flux.set(i,6,8,6,1, 0);
        D2flux.set(i,6,8,7,1, 0);
        D2flux.set(i,6,8,8,1, 0);

        D2flux.set(i,7,1,1,1, 2*q2*q7/pow( q1, 3 ) - 2*q3*q6/pow( q1, 3 ));
        D2flux.set(i,7,1,2,1, -q7/pow( q1, 2 ));
        D2flux.set(i,7,1,3,1, q6/pow( q1, 2 ));
        D2flux.set(i,7,1,4,1, 0);
        D2flux.set(i,7,1,5,1, 0);
        D2flux.set(i,7,1,6,1, q3/pow( q1, 2 ));
        D2flux.set(i,7,1,7,1, -q2/pow( q1, 2 ));
        D2flux.set(i,7,1,8,1, 0);
        D2flux.set(i,7,2,1,1, -q7/pow( q1, 2 ));
        D2flux.set(i,7,2,2,1, 0);
        D2flux.set(i,7,2,3,1, 0);
        D2flux.set(i,7,2,4,1, 0);
        D2flux.set(i,7,2,5,1, 0);
        D2flux.set(i,7,2,6,1, 0);
        D2flux.set(i,7,2,7,1, 1/q1);
        D2flux.set(i,7,2,8,1, 0);
        D2flux.set(i,7,3,1,1, q6/pow( q1, 2 ));
        D2flux.set(i,7,3,2,1, 0);
        D2flux.set(i,7,3,3,1, 0);
        D2flux.set(i,7,3,4,1, 0);
        D2flux.set(i,7,3,5,1, 0);
        D2flux.set(i,7,3,6,1, -1/q1);
        D2flux.set(i,7,3,7,1, 0);
        D2flux.set(i,7,3,8,1, 0);
        D2flux.set(i,7,4,1,1, 0);
        D2flux.set(i,7,4,2,1, 0);
        D2flux.set(i,7,4,3,1, 0);
        D2flux.set(i,7,4,4,1, 0);
        D2flux.set(i,7,4,5,1, 0);
        D2flux.set(i,7,4,6,1, 0);
        D2flux.set(i,7,4,7,1, 0);
        D2flux.set(i,7,4,8,1, 0);
        D2flux.set(i,7,5,1,1, 0);
        D2flux.set(i,7,5,2,1, 0);
        D2flux.set(i,7,5,3,1, 0);
        D2flux.set(i,7,5,4,1, 0);
        D2flux.set(i,7,5,5,1, 0);
        D2flux.set(i,7,5,6,1, 0);
        D2flux.set(i,7,5,7,1, 0);
        D2flux.set(i,7,5,8,1, 0);
        D2flux.set(i,7,6,1,1, q3/pow( q1, 2 ));
        D2flux.set(i,7,6,2,1, 0);
        D2flux.set(i,7,6,3,1, -1/q1);
        D2flux.set(i,7,6,4,1, 0);
        D2flux.set(i,7,6,5,1, 0);
        D2flux.set(i,7,6,6,1, 0);
        D2flux.set(i,7,6,7,1, 0);
        D2flux.set(i,7,6,8,1, 0);
        D2flux.set(i,7,7,1,1, -q2/pow( q1, 2 ));
        D2flux.set(i,7,7,2,1, 1/q1);
        D2flux.set(i,7,7,3,1, 0);
        D2flux.set(i,7,7,4,1, 0);
        D2flux.set(i,7,7,5,1, 0);
        D2flux.set(i,7,7,6,1, 0);
        D2flux.set(i,7,7,7,1, 0);
        D2flux.set(i,7,7,8,1, 0);
        D2flux.set(i,7,8,1,1, 0);
        D2flux.set(i,7,8,2,1, 0);
        D2flux.set(i,7,8,3,1, 0);
        D2flux.set(i,7,8,4,1, 0);
        D2flux.set(i,7,8,5,1, 0);
        D2flux.set(i,7,8,6,1, 0);
        D2flux.set(i,7,8,7,1, 0);
        D2flux.set(i,7,8,8,1, 0);

        D2flux.set(i,8,1,1,1, 2*q2*q8/pow( q1, 3 ) - 2*q4*q6/pow( q1, 3 ));
        D2flux.set(i,8,1,2,1, -q8/pow( q1, 2 ));
        D2flux.set(i,8,1,3,1, 0);
        D2flux.set(i,8,1,4,1, q6/pow( q1, 2 ));
        D2flux.set(i,8,1,5,1, 0);
        D2flux.set(i,8,1,6,1, q4/pow( q1, 2 ));
        D2flux.set(i,8,1,7,1, 0);
        D2flux.set(i,8,1,8,1, -q2/pow( q1, 2 ));
        D2flux.set(i,8,2,1,1, -q8/pow( q1, 2 ));
        D2flux.set(i,8,2,2,1, 0);
        D2flux.set(i,8,2,3,1, 0);
        D2flux.set(i,8,2,4,1, 0);
        D2flux.set(i,8,2,5,1, 0);
        D2flux.set(i,8,2,6,1, 0);
        D2flux.set(i,8,2,7,1, 0);
        D2flux.set(i,8,2,8,1, 1/q1);
        D2flux.set(i,8,3,1,1, 0);
        D2flux.set(i,8,3,2,1, 0);
        D2flux.set(i,8,3,3,1, 0);
        D2flux.set(i,8,3,4,1, 0);
        D2flux.set(i,8,3,5,1, 0);
        D2flux.set(i,8,3,6,1, 0);
        D2flux.set(i,8,3,7,1, 0);
        D2flux.set(i,8,3,8,1, 0);
        D2flux.set(i,8,4,1,1, q6/pow( q1, 2 ));
        D2flux.set(i,8,4,2,1, 0);
        D2flux.set(i,8,4,3,1, 0);
        D2flux.set(i,8,4,4,1, 0);
        D2flux.set(i,8,4,5,1, 0);
        D2flux.set(i,8,4,6,1, -1/q1);
        D2flux.set(i,8,4,7,1, 0);
        D2flux.set(i,8,4,8,1, 0);
        D2flux.set(i,8,5,1,1, 0);
        D2flux.set(i,8,5,2,1, 0);
        D2flux.set(i,8,5,3,1, 0);
        D2flux.set(i,8,5,4,1, 0);
        D2flux.set(i,8,5,5,1, 0);
        D2flux.set(i,8,5,6,1, 0);
        D2flux.set(i,8,5,7,1, 0);
        D2flux.set(i,8,5,8,1, 0);
        D2flux.set(i,8,6,1,1, q4/pow( q1, 2 ));
        D2flux.set(i,8,6,2,1, 0);
        D2flux.set(i,8,6,3,1, 0);
        D2flux.set(i,8,6,4,1, -1/q1);
        D2flux.set(i,8,6,5,1, 0);
        D2flux.set(i,8,6,6,1, 0);
        D2flux.set(i,8,6,7,1, 0);
        D2flux.set(i,8,6,8,1, 0);
        D2flux.set(i,8,7,1,1, 0);
        D2flux.set(i,8,7,2,1, 0);
        D2flux.set(i,8,7,3,1, 0);
        D2flux.set(i,8,7,4,1, 0);
        D2flux.set(i,8,7,5,1, 0);
        D2flux.set(i,8,7,6,1, 0);
        D2flux.set(i,8,7,7,1, 0);
        D2flux.set(i,8,7,8,1, 0);
        D2flux.set(i,8,8,1,1, -q2/pow( q1, 2 ));
        D2flux.set(i,8,8,2,1, 1/q1);
        D2flux.set(i,8,8,3,1, 0);
        D2flux.set(i,8,8,4,1, 0);
        D2flux.set(i,8,8,5,1, 0);
        D2flux.set(i,8,8,6,1, 0);
        D2flux.set(i,8,8,7,1, 0);
        D2flux.set(i,8,8,8,1, 0);

        //Computing the Hessian of the flux function: g''(q)

        D2flux.set(i,1,1,1,2, 0);
        D2flux.set(i,1,1,2,2, 0);
        D2flux.set(i,1,1,3,2, 0);
        D2flux.set(i,1,1,4,2, 0);
        D2flux.set(i,1,1,5,2, 0);
        D2flux.set(i,1,1,6,2, 0);
        D2flux.set(i,1,1,7,2, 0);
        D2flux.set(i,1,1,8,2, 0);
        D2flux.set(i,1,2,1,2, 0);
        D2flux.set(i,1,2,2,2, 0);
        D2flux.set(i,1,2,3,2, 0);
        D2flux.set(i,1,2,4,2, 0);
        D2flux.set(i,1,2,5,2, 0);
        D2flux.set(i,1,2,6,2, 0);
        D2flux.set(i,1,2,7,2, 0);
        D2flux.set(i,1,2,8,2, 0);
        D2flux.set(i,1,3,1,2, 0);
        D2flux.set(i,1,3,2,2, 0);
        D2flux.set(i,1,3,3,2, 0);
        D2flux.set(i,1,3,4,2, 0);
        D2flux.set(i,1,3,5,2, 0);
        D2flux.set(i,1,3,6,2, 0);
        D2flux.set(i,1,3,7,2, 0);
        D2flux.set(i,1,3,8,2, 0);
        D2flux.set(i,1,4,1,2, 0);
        D2flux.set(i,1,4,2,2, 0);
        D2flux.set(i,1,4,3,2, 0);
        D2flux.set(i,1,4,4,2, 0);
        D2flux.set(i,1,4,5,2, 0);
        D2flux.set(i,1,4,6,2, 0);
        D2flux.set(i,1,4,7,2, 0);
        D2flux.set(i,1,4,8,2, 0);
        D2flux.set(i,1,5,1,2, 0);
        D2flux.set(i,1,5,2,2, 0);
        D2flux.set(i,1,5,3,2, 0);
        D2flux.set(i,1,5,4,2, 0);
        D2flux.set(i,1,5,5,2, 0);
        D2flux.set(i,1,5,6,2, 0);
        D2flux.set(i,1,5,7,2, 0);
        D2flux.set(i,1,5,8,2, 0);
        D2flux.set(i,1,6,1,2, 0);
        D2flux.set(i,1,6,2,2, 0);
        D2flux.set(i,1,6,3,2, 0);
        D2flux.set(i,1,6,4,2, 0);
        D2flux.set(i,1,6,5,2, 0);
        D2flux.set(i,1,6,6,2, 0);
        D2flux.set(i,1,6,7,2, 0);
        D2flux.set(i,1,6,8,2, 0);
        D2flux.set(i,1,7,1,2, 0);
        D2flux.set(i,1,7,2,2, 0);
        D2flux.set(i,1,7,3,2, 0);
        D2flux.set(i,1,7,4,2, 0);
        D2flux.set(i,1,7,5,2, 0);
        D2flux.set(i,1,7,6,2, 0);
        D2flux.set(i,1,7,7,2, 0);
        D2flux.set(i,1,7,8,2, 0);
        D2flux.set(i,1,8,1,2, 0);
        D2flux.set(i,1,8,2,2, 0);
        D2flux.set(i,1,8,3,2, 0);
        D2flux.set(i,1,8,4,2, 0);
        D2flux.set(i,1,8,5,2, 0);
        D2flux.set(i,1,8,6,2, 0);
        D2flux.set(i,1,8,7,2, 0);
        D2flux.set(i,1,8,8,2, 0);

        D2flux.set(i,2,1,1,2, 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,2,1,2,2, -q3/pow( q1, 2 ));
        D2flux.set(i,2,1,3,2, -q2/pow( q1, 2 ));
        D2flux.set(i,2,1,4,2, 0);
        D2flux.set(i,2,1,5,2, 0);
        D2flux.set(i,2,1,6,2, 0);
        D2flux.set(i,2,1,7,2, 0);
        D2flux.set(i,2,1,8,2, 0);
        D2flux.set(i,2,2,1,2, -q3/pow( q1, 2 ));
        D2flux.set(i,2,2,2,2, 0);
        D2flux.set(i,2,2,3,2, 1/q1);
        D2flux.set(i,2,2,4,2, 0);
        D2flux.set(i,2,2,5,2, 0);
        D2flux.set(i,2,2,6,2, 0);
        D2flux.set(i,2,2,7,2, 0);
        D2flux.set(i,2,2,8,2, 0);
        D2flux.set(i,2,3,1,2, -q2/pow( q1, 2 ));
        D2flux.set(i,2,3,2,2, 1/q1);
        D2flux.set(i,2,3,3,2, 0);
        D2flux.set(i,2,3,4,2, 0);
        D2flux.set(i,2,3,5,2, 0);
        D2flux.set(i,2,3,6,2, 0);
        D2flux.set(i,2,3,7,2, 0);
        D2flux.set(i,2,3,8,2, 0);
        D2flux.set(i,2,4,1,2, 0);
        D2flux.set(i,2,4,2,2, 0);
        D2flux.set(i,2,4,3,2, 0);
        D2flux.set(i,2,4,4,2, 0);
        D2flux.set(i,2,4,5,2, 0);
        D2flux.set(i,2,4,6,2, 0);
        D2flux.set(i,2,4,7,2, 0);
        D2flux.set(i,2,4,8,2, 0);
        D2flux.set(i,2,5,1,2, 0);
        D2flux.set(i,2,5,2,2, 0);
        D2flux.set(i,2,5,3,2, 0);
        D2flux.set(i,2,5,4,2, 0);
        D2flux.set(i,2,5,5,2, 0);
        D2flux.set(i,2,5,6,2, 0);
        D2flux.set(i,2,5,7,2, 0);
        D2flux.set(i,2,5,8,2, 0);
        D2flux.set(i,2,6,1,2, 0);
        D2flux.set(i,2,6,2,2, 0);
        D2flux.set(i,2,6,3,2, 0);
        D2flux.set(i,2,6,4,2, 0);
        D2flux.set(i,2,6,5,2, 0);
        D2flux.set(i,2,6,6,2, 0);
        D2flux.set(i,2,6,7,2, -1);
        D2flux.set(i,2,6,8,2, 0);
        D2flux.set(i,2,7,1,2, 0);
        D2flux.set(i,2,7,2,2, 0);
        D2flux.set(i,2,7,3,2, 0);
        D2flux.set(i,2,7,4,2, 0);
        D2flux.set(i,2,7,5,2, 0);
        D2flux.set(i,2,7,6,2, -1);
        D2flux.set(i,2,7,7,2, 0);
        D2flux.set(i,2,7,8,2, 0);
        D2flux.set(i,2,8,1,2, 0);
        D2flux.set(i,2,8,2,2, 0);
        D2flux.set(i,2,8,3,2, 0);
        D2flux.set(i,2,8,4,2, 0);
        D2flux.set(i,2,8,5,2, 0);
        D2flux.set(i,2,8,6,2, 0);
        D2flux.set(i,2,8,7,2, 0);
        D2flux.set(i,2,8,8,2, 0);

        D2flux.set(i,3,1,1,2, -gamma*pow( q2, 2 )/pow( q1, 3 ) - gamma*pow( q3, 2 )/pow( q1, 3 ) - gamma*pow( q4, 2 )/pow( q1, 3 ) + pow( q2, 2 )/pow( q1, 3 ) + 3*pow( q3, 2 )/pow( q1, 3 ) + pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,3,1,2,2, gamma*q2/pow( q1, 2 ) - q2/pow( q1, 2 ));
        D2flux.set(i,3,1,3,2, gamma*q3/pow( q1, 2 ) - 3*q3/pow( q1, 2 ));
        D2flux.set(i,3,1,4,2, gamma*q4/pow( q1, 2 ) - q4/pow( q1, 2 ));
        D2flux.set(i,3,1,5,2, 0);
        D2flux.set(i,3,1,6,2, 0);
        D2flux.set(i,3,1,7,2, 0);
        D2flux.set(i,3,1,8,2, 0);
        D2flux.set(i,3,2,1,2, gamma*q2/pow( q1, 2 ) - q2/pow( q1, 2 ));
        D2flux.set(i,3,2,2,2, -gamma/q1 + 1/q1);
        D2flux.set(i,3,2,3,2, 0);
        D2flux.set(i,3,2,4,2, 0);
        D2flux.set(i,3,2,5,2, 0);
        D2flux.set(i,3,2,6,2, 0);
        D2flux.set(i,3,2,7,2, 0);
        D2flux.set(i,3,2,8,2, 0);
        D2flux.set(i,3,3,1,2, gamma*q3/pow( q1, 2 ) - 3*q3/pow( q1, 2 ));
        D2flux.set(i,3,3,2,2, 0);
        D2flux.set(i,3,3,3,2, -gamma/q1 + 3/q1);
        D2flux.set(i,3,3,4,2, 0);
        D2flux.set(i,3,3,5,2, 0);
        D2flux.set(i,3,3,6,2, 0);
        D2flux.set(i,3,3,7,2, 0);
        D2flux.set(i,3,3,8,2, 0);
        D2flux.set(i,3,4,1,2, gamma*q4/pow( q1, 2 ) - q4/pow( q1, 2 ));
        D2flux.set(i,3,4,2,2, 0);
        D2flux.set(i,3,4,3,2, 0);
        D2flux.set(i,3,4,4,2, -gamma/q1 + 1/q1);
        D2flux.set(i,3,4,5,2, 0);
        D2flux.set(i,3,4,6,2, 0);
        D2flux.set(i,3,4,7,2, 0);
        D2flux.set(i,3,4,8,2, 0);
        D2flux.set(i,3,5,1,2, 0);
        D2flux.set(i,3,5,2,2, 0);
        D2flux.set(i,3,5,3,2, 0);
        D2flux.set(i,3,5,4,2, 0);
        D2flux.set(i,3,5,5,2, 0);
        D2flux.set(i,3,5,6,2, 0);
        D2flux.set(i,3,5,7,2, 0);
        D2flux.set(i,3,5,8,2, 0);
        D2flux.set(i,3,6,1,2, 0);
        D2flux.set(i,3,6,2,2, 0);
        D2flux.set(i,3,6,3,2, 0);
        D2flux.set(i,3,6,4,2, 0);
        D2flux.set(i,3,6,5,2, 0);
        D2flux.set(i,3,6,6,2, -gamma + 2);
        D2flux.set(i,3,6,7,2, 0);
        D2flux.set(i,3,6,8,2, 0);
        D2flux.set(i,3,7,1,2, 0);
        D2flux.set(i,3,7,2,2, 0);
        D2flux.set(i,3,7,3,2, 0);
        D2flux.set(i,3,7,4,2, 0);
        D2flux.set(i,3,7,5,2, 0);
        D2flux.set(i,3,7,6,2, 0);
        D2flux.set(i,3,7,7,2, -gamma);
        D2flux.set(i,3,7,8,2, 0);
        D2flux.set(i,3,8,1,2, 0);
        D2flux.set(i,3,8,2,2, 0);
        D2flux.set(i,3,8,3,2, 0);
        D2flux.set(i,3,8,4,2, 0);
        D2flux.set(i,3,8,5,2, 0);
        D2flux.set(i,3,8,6,2, 0);
        D2flux.set(i,3,8,7,2, 0);
        D2flux.set(i,3,8,8,2, -gamma + 2);

        D2flux.set(i,4,1,1,2, 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,4,1,2,2, 0);
        D2flux.set(i,4,1,3,2, -q4/pow( q1, 2 ));
        D2flux.set(i,4,1,4,2, -q3/pow( q1, 2 ));
        D2flux.set(i,4,1,5,2, 0);
        D2flux.set(i,4,1,6,2, 0);
        D2flux.set(i,4,1,7,2, 0);
        D2flux.set(i,4,1,8,2, 0);
        D2flux.set(i,4,2,1,2, 0);
        D2flux.set(i,4,2,2,2, 0);
        D2flux.set(i,4,2,3,2, 0);
        D2flux.set(i,4,2,4,2, 0);
        D2flux.set(i,4,2,5,2, 0);
        D2flux.set(i,4,2,6,2, 0);
        D2flux.set(i,4,2,7,2, 0);
        D2flux.set(i,4,2,8,2, 0);
        D2flux.set(i,4,3,1,2, -q4/pow( q1, 2 ));
        D2flux.set(i,4,3,2,2, 0);
        D2flux.set(i,4,3,3,2, 0);
        D2flux.set(i,4,3,4,2, 1/q1);
        D2flux.set(i,4,3,5,2, 0);
        D2flux.set(i,4,3,6,2, 0);
        D2flux.set(i,4,3,7,2, 0);
        D2flux.set(i,4,3,8,2, 0);
        D2flux.set(i,4,4,1,2, -q3/pow( q1, 2 ));
        D2flux.set(i,4,4,2,2, 0);
        D2flux.set(i,4,4,3,2, 1/q1);
        D2flux.set(i,4,4,4,2, 0);
        D2flux.set(i,4,4,5,2, 0);
        D2flux.set(i,4,4,6,2, 0);
        D2flux.set(i,4,4,7,2, 0);
        D2flux.set(i,4,4,8,2, 0);
        D2flux.set(i,4,5,1,2, 0);
        D2flux.set(i,4,5,2,2, 0);
        D2flux.set(i,4,5,3,2, 0);
        D2flux.set(i,4,5,4,2, 0);
        D2flux.set(i,4,5,5,2, 0);
        D2flux.set(i,4,5,6,2, 0);
        D2flux.set(i,4,5,7,2, 0);
        D2flux.set(i,4,5,8,2, 0);
        D2flux.set(i,4,6,1,2, 0);
        D2flux.set(i,4,6,2,2, 0);
        D2flux.set(i,4,6,3,2, 0);
        D2flux.set(i,4,6,4,2, 0);
        D2flux.set(i,4,6,5,2, 0);
        D2flux.set(i,4,6,6,2, 0);
        D2flux.set(i,4,6,7,2, 0);
        D2flux.set(i,4,6,8,2, 0);
        D2flux.set(i,4,7,1,2, 0);
        D2flux.set(i,4,7,2,2, 0);
        D2flux.set(i,4,7,3,2, 0);
        D2flux.set(i,4,7,4,2, 0);
        D2flux.set(i,4,7,5,2, 0);
        D2flux.set(i,4,7,6,2, 0);
        D2flux.set(i,4,7,7,2, 0);
        D2flux.set(i,4,7,8,2, -1);
        D2flux.set(i,4,8,1,2, 0);
        D2flux.set(i,4,8,2,2, 0);
        D2flux.set(i,4,8,3,2, 0);
        D2flux.set(i,4,8,4,2, 0);
        D2flux.set(i,4,8,5,2, 0);
        D2flux.set(i,4,8,6,2, 0);
        D2flux.set(i,4,8,7,2, -1);
        D2flux.set(i,4,8,8,2, 0);

        D2flux.set(i,5,1,1,2, 2*gamma*q3*q5/pow( q1, 3 ) - gamma*q3*pow( q6, 2 )/pow( q1, 3 ) - gamma*q3*pow( q7, 2 )/pow( q1, 3 ) - gamma*q3*pow( q8, 2 )/pow( q1, 3 ) - 3*gamma*pow( q2, 2 )*q3/pow( q1, 4 ) - 3*gamma*pow( q3, 3 )/pow( q1, 4 ) - 3*gamma*q3*pow( q4, 2 )/pow( q1, 4 ) - 2*q2*q6*q7/pow( q1, 3 ) + 2*q3*pow( q6, 2 )/pow( q1, 3 ) + 2*q3*pow( q8, 2 )/pow( q1, 3 ) - 2*q4*q7*q8/pow( q1, 3 ) + 3*pow( q2, 2 )*q3/pow( q1, 4 ) + 3*pow( q3, 3 )/pow( q1, 4 ) + 3*q3*pow( q4, 2 )/pow( q1, 4 ));
        D2flux.set(i,5,1,2,2, 2*gamma*q2*q3/pow( q1, 3 ) + q6*q7/pow( q1, 2 ) - 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,5,1,3,2, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + gamma*pow( q2, 2 )/pow( q1, 3 ) + 3*gamma*pow( q3, 2 )/pow( q1, 3 ) + gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q6, 2 )/pow( q1, 2 ) - pow( q8, 2 )/pow( q1, 2 ) - pow( q2, 2 )/pow( q1, 3 ) - 3*pow( q3, 2 )/pow( q1, 3 ) - pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,1,4,2, 2*gamma*q3*q4/pow( q1, 3 ) + q7*q8/pow( q1, 2 ) - 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,5,1,5,2, -gamma*q3/pow( q1, 2 ));
        D2flux.set(i,5,1,6,2, gamma*q3*q6/pow( q1, 2 ) + q2*q7/pow( q1, 2 ) - 2*q3*q6/pow( q1, 2 ));
        D2flux.set(i,5,1,7,2, gamma*q3*q7/pow( q1, 2 ) + q2*q6/pow( q1, 2 ) + q4*q8/pow( q1, 2 ));
        D2flux.set(i,5,1,8,2, gamma*q3*q8/pow( q1, 2 ) - 2*q3*q8/pow( q1, 2 ) + q4*q7/pow( q1, 2 ));
        D2flux.set(i,5,2,1,2, 2*gamma*q2*q3/pow( q1, 3 ) + q6*q7/pow( q1, 2 ) - 2*q2*q3/pow( q1, 3 ));
        D2flux.set(i,5,2,2,2, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,2,3,2, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,2,4,2, 0);
        D2flux.set(i,5,2,5,2, 0);
        D2flux.set(i,5,2,6,2, -q7/q1);
        D2flux.set(i,5,2,7,2, -q6/q1);
        D2flux.set(i,5,2,8,2, 0);
        D2flux.set(i,5,3,1,2, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + gamma*pow( q2, 2 )/pow( q1, 3 ) + 3*gamma*pow( q3, 2 )/pow( q1, 3 ) + gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q6, 2 )/pow( q1, 2 ) - pow( q8, 2 )/pow( q1, 2 ) - pow( q2, 2 )/pow( q1, 3 ) - 3*pow( q3, 2 )/pow( q1, 3 ) - pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,3,2,2, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,3,3,2, -3*gamma*q3/pow( q1, 2 ) + 3*q3/pow( q1, 2 ));
        D2flux.set(i,5,3,4,2, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,3,5,2, gamma/q1);
        D2flux.set(i,5,3,6,2, -gamma*q6/q1 + 2*q6/q1);
        D2flux.set(i,5,3,7,2, -gamma*q7/q1);
        D2flux.set(i,5,3,8,2, -gamma*q8/q1 + 2*q8/q1);
        D2flux.set(i,5,4,1,2, 2*gamma*q3*q4/pow( q1, 3 ) + q7*q8/pow( q1, 2 ) - 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,5,4,2,2, 0);
        D2flux.set(i,5,4,3,2, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,4,4,2, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,4,5,2, 0);
        D2flux.set(i,5,4,6,2, 0);
        D2flux.set(i,5,4,7,2, -q8/q1);
        D2flux.set(i,5,4,8,2, -q7/q1);
        D2flux.set(i,5,5,1,2, -gamma*q3/pow( q1, 2 ));
        D2flux.set(i,5,5,2,2, 0);
        D2flux.set(i,5,5,3,2, gamma/q1);
        D2flux.set(i,5,5,4,2, 0);
        D2flux.set(i,5,5,5,2, 0);
        D2flux.set(i,5,5,6,2, 0);
        D2flux.set(i,5,5,7,2, 0);
        D2flux.set(i,5,5,8,2, 0);
        D2flux.set(i,5,6,1,2, gamma*q3*q6/pow( q1, 2 ) + q2*q7/pow( q1, 2 ) - 2*q3*q6/pow( q1, 2 ));
        D2flux.set(i,5,6,2,2, -q7/q1);
        D2flux.set(i,5,6,3,2, -gamma*q6/q1 + 2*q6/q1);
        D2flux.set(i,5,6,4,2, 0);
        D2flux.set(i,5,6,5,2, 0);
        D2flux.set(i,5,6,6,2, -gamma*q3/q1 + 2*q3/q1);
        D2flux.set(i,5,6,7,2, -q2/q1);
        D2flux.set(i,5,6,8,2, 0);
        D2flux.set(i,5,7,1,2, gamma*q3*q7/pow( q1, 2 ) + q2*q6/pow( q1, 2 ) + q4*q8/pow( q1, 2 ));
        D2flux.set(i,5,7,2,2, -q6/q1);
        D2flux.set(i,5,7,3,2, -gamma*q7/q1);
        D2flux.set(i,5,7,4,2, -q8/q1);
        D2flux.set(i,5,7,5,2, 0);
        D2flux.set(i,5,7,6,2, -q2/q1);
        D2flux.set(i,5,7,7,2, -gamma*q3/q1);
        D2flux.set(i,5,7,8,2, -q4/q1);
        D2flux.set(i,5,8,1,2, gamma*q3*q8/pow( q1, 2 ) - 2*q3*q8/pow( q1, 2 ) + q4*q7/pow( q1, 2 ));
        D2flux.set(i,5,8,2,2, 0);
        D2flux.set(i,5,8,3,2, -gamma*q8/q1 + 2*q8/q1);
        D2flux.set(i,5,8,4,2, -q7/q1);
        D2flux.set(i,5,8,5,2, 0);
        D2flux.set(i,5,8,6,2, 0);
        D2flux.set(i,5,8,7,2, -q4/q1);
        D2flux.set(i,5,8,8,2, -gamma*q3/q1 + 2*q3/q1);

        D2flux.set(i,6,1,1,2, -2*q2*q7/pow( q1, 3 ) + 2*q3*q6/pow( q1, 3 ));
        D2flux.set(i,6,1,2,2, q7/pow( q1, 2 ));
        D2flux.set(i,6,1,3,2, -q6/pow( q1, 2 ));
        D2flux.set(i,6,1,4,2, 0);
        D2flux.set(i,6,1,5,2, 0);
        D2flux.set(i,6,1,6,2, -q3/pow( q1, 2 ));
        D2flux.set(i,6,1,7,2, q2/pow( q1, 2 ));
        D2flux.set(i,6,1,8,2, 0);
        D2flux.set(i,6,2,1,2, q7/pow( q1, 2 ));
        D2flux.set(i,6,2,2,2, 0);
        D2flux.set(i,6,2,3,2, 0);
        D2flux.set(i,6,2,4,2, 0);
        D2flux.set(i,6,2,5,2, 0);
        D2flux.set(i,6,2,6,2, 0);
        D2flux.set(i,6,2,7,2, -1/q1);
        D2flux.set(i,6,2,8,2, 0);
        D2flux.set(i,6,3,1,2, -q6/pow( q1, 2 ));
        D2flux.set(i,6,3,2,2, 0);
        D2flux.set(i,6,3,3,2, 0);
        D2flux.set(i,6,3,4,2, 0);
        D2flux.set(i,6,3,5,2, 0);
        D2flux.set(i,6,3,6,2, 1/q1);
        D2flux.set(i,6,3,7,2, 0);
        D2flux.set(i,6,3,8,2, 0);
        D2flux.set(i,6,4,1,2, 0);
        D2flux.set(i,6,4,2,2, 0);
        D2flux.set(i,6,4,3,2, 0);
        D2flux.set(i,6,4,4,2, 0);
        D2flux.set(i,6,4,5,2, 0);
        D2flux.set(i,6,4,6,2, 0);
        D2flux.set(i,6,4,7,2, 0);
        D2flux.set(i,6,4,8,2, 0);
        D2flux.set(i,6,5,1,2, 0);
        D2flux.set(i,6,5,2,2, 0);
        D2flux.set(i,6,5,3,2, 0);
        D2flux.set(i,6,5,4,2, 0);
        D2flux.set(i,6,5,5,2, 0);
        D2flux.set(i,6,5,6,2, 0);
        D2flux.set(i,6,5,7,2, 0);
        D2flux.set(i,6,5,8,2, 0);
        D2flux.set(i,6,6,1,2, -q3/pow( q1, 2 ));
        D2flux.set(i,6,6,2,2, 0);
        D2flux.set(i,6,6,3,2, 1/q1);
        D2flux.set(i,6,6,4,2, 0);
        D2flux.set(i,6,6,5,2, 0);
        D2flux.set(i,6,6,6,2, 0);
        D2flux.set(i,6,6,7,2, 0);
        D2flux.set(i,6,6,8,2, 0);
        D2flux.set(i,6,7,1,2, q2/pow( q1, 2 ));
        D2flux.set(i,6,7,2,2, -1/q1);
        D2flux.set(i,6,7,3,2, 0);
        D2flux.set(i,6,7,4,2, 0);
        D2flux.set(i,6,7,5,2, 0);
        D2flux.set(i,6,7,6,2, 0);
        D2flux.set(i,6,7,7,2, 0);
        D2flux.set(i,6,7,8,2, 0);
        D2flux.set(i,6,8,1,2, 0);
        D2flux.set(i,6,8,2,2, 0);
        D2flux.set(i,6,8,3,2, 0);
        D2flux.set(i,6,8,4,2, 0);
        D2flux.set(i,6,8,5,2, 0);
        D2flux.set(i,6,8,6,2, 0);
        D2flux.set(i,6,8,7,2, 0);
        D2flux.set(i,6,8,8,2, 0);

        D2flux.set(i,7,1,1,2, 0);
        D2flux.set(i,7,1,2,2, 0);
        D2flux.set(i,7,1,3,2, 0);
        D2flux.set(i,7,1,4,2, 0);
        D2flux.set(i,7,1,5,2, 0);
        D2flux.set(i,7,1,6,2, 0);
        D2flux.set(i,7,1,7,2, 0);
        D2flux.set(i,7,1,8,2, 0);
        D2flux.set(i,7,2,1,2, 0);
        D2flux.set(i,7,2,2,2, 0);
        D2flux.set(i,7,2,3,2, 0);
        D2flux.set(i,7,2,4,2, 0);
        D2flux.set(i,7,2,5,2, 0);
        D2flux.set(i,7,2,6,2, 0);
        D2flux.set(i,7,2,7,2, 0);
        D2flux.set(i,7,2,8,2, 0);
        D2flux.set(i,7,3,1,2, 0);
        D2flux.set(i,7,3,2,2, 0);
        D2flux.set(i,7,3,3,2, 0);
        D2flux.set(i,7,3,4,2, 0);
        D2flux.set(i,7,3,5,2, 0);
        D2flux.set(i,7,3,6,2, 0);
        D2flux.set(i,7,3,7,2, 0);
        D2flux.set(i,7,3,8,2, 0);
        D2flux.set(i,7,4,1,2, 0);
        D2flux.set(i,7,4,2,2, 0);
        D2flux.set(i,7,4,3,2, 0);
        D2flux.set(i,7,4,4,2, 0);
        D2flux.set(i,7,4,5,2, 0);
        D2flux.set(i,7,4,6,2, 0);
        D2flux.set(i,7,4,7,2, 0);
        D2flux.set(i,7,4,8,2, 0);
        D2flux.set(i,7,5,1,2, 0);
        D2flux.set(i,7,5,2,2, 0);
        D2flux.set(i,7,5,3,2, 0);
        D2flux.set(i,7,5,4,2, 0);
        D2flux.set(i,7,5,5,2, 0);
        D2flux.set(i,7,5,6,2, 0);
        D2flux.set(i,7,5,7,2, 0);
        D2flux.set(i,7,5,8,2, 0);
        D2flux.set(i,7,6,1,2, 0);
        D2flux.set(i,7,6,2,2, 0);
        D2flux.set(i,7,6,3,2, 0);
        D2flux.set(i,7,6,4,2, 0);
        D2flux.set(i,7,6,5,2, 0);
        D2flux.set(i,7,6,6,2, 0);
        D2flux.set(i,7,6,7,2, 0);
        D2flux.set(i,7,6,8,2, 0);
        D2flux.set(i,7,7,1,2, 0);
        D2flux.set(i,7,7,2,2, 0);
        D2flux.set(i,7,7,3,2, 0);
        D2flux.set(i,7,7,4,2, 0);
        D2flux.set(i,7,7,5,2, 0);
        D2flux.set(i,7,7,6,2, 0);
        D2flux.set(i,7,7,7,2, 0);
        D2flux.set(i,7,7,8,2, 0);
        D2flux.set(i,7,8,1,2, 0);
        D2flux.set(i,7,8,2,2, 0);
        D2flux.set(i,7,8,3,2, 0);
        D2flux.set(i,7,8,4,2, 0);
        D2flux.set(i,7,8,5,2, 0);
        D2flux.set(i,7,8,6,2, 0);
        D2flux.set(i,7,8,7,2, 0);
        D2flux.set(i,7,8,8,2, 0);

        D2flux.set(i,8,1,1,2, 2*q3*q8/pow( q1, 3 ) - 2*q4*q7/pow( q1, 3 ));
        D2flux.set(i,8,1,2,2, 0);
        D2flux.set(i,8,1,3,2, -q8/pow( q1, 2 ));
        D2flux.set(i,8,1,4,2, q7/pow( q1, 2 ));
        D2flux.set(i,8,1,5,2, 0);
        D2flux.set(i,8,1,6,2, 0);
        D2flux.set(i,8,1,7,2, q4/pow( q1, 2 ));
        D2flux.set(i,8,1,8,2, -q3/pow( q1, 2 ));
        D2flux.set(i,8,2,1,2, 0);
        D2flux.set(i,8,2,2,2, 0);
        D2flux.set(i,8,2,3,2, 0);
        D2flux.set(i,8,2,4,2, 0);
        D2flux.set(i,8,2,5,2, 0);
        D2flux.set(i,8,2,6,2, 0);
        D2flux.set(i,8,2,7,2, 0);
        D2flux.set(i,8,2,8,2, 0);
        D2flux.set(i,8,3,1,2, -q8/pow( q1, 2 ));
        D2flux.set(i,8,3,2,2, 0);
        D2flux.set(i,8,3,3,2, 0);
        D2flux.set(i,8,3,4,2, 0);
        D2flux.set(i,8,3,5,2, 0);
        D2flux.set(i,8,3,6,2, 0);
        D2flux.set(i,8,3,7,2, 0);
        D2flux.set(i,8,3,8,2, 1/q1);
        D2flux.set(i,8,4,1,2, q7/pow( q1, 2 ));
        D2flux.set(i,8,4,2,2, 0);
        D2flux.set(i,8,4,3,2, 0);
        D2flux.set(i,8,4,4,2, 0);
        D2flux.set(i,8,4,5,2, 0);
        D2flux.set(i,8,4,6,2, 0);
        D2flux.set(i,8,4,7,2, -1/q1);
        D2flux.set(i,8,4,8,2, 0);
        D2flux.set(i,8,5,1,2, 0);
        D2flux.set(i,8,5,2,2, 0);
        D2flux.set(i,8,5,3,2, 0);
        D2flux.set(i,8,5,4,2, 0);
        D2flux.set(i,8,5,5,2, 0);
        D2flux.set(i,8,5,6,2, 0);
        D2flux.set(i,8,5,7,2, 0);
        D2flux.set(i,8,5,8,2, 0);
        D2flux.set(i,8,6,1,2, 0);
        D2flux.set(i,8,6,2,2, 0);
        D2flux.set(i,8,6,3,2, 0);
        D2flux.set(i,8,6,4,2, 0);
        D2flux.set(i,8,6,5,2, 0);
        D2flux.set(i,8,6,6,2, 0);
        D2flux.set(i,8,6,7,2, 0);
        D2flux.set(i,8,6,8,2, 0);
        D2flux.set(i,8,7,1,2, q4/pow( q1, 2 ));
        D2flux.set(i,8,7,2,2, 0);
        D2flux.set(i,8,7,3,2, 0);
        D2flux.set(i,8,7,4,2, -1/q1);
        D2flux.set(i,8,7,5,2, 0);
        D2flux.set(i,8,7,6,2, 0);
        D2flux.set(i,8,7,7,2, 0);
        D2flux.set(i,8,7,8,2, 0);
        D2flux.set(i,8,8,1,2, -q3/pow( q1, 2 ));
        D2flux.set(i,8,8,2,2, 0);
        D2flux.set(i,8,8,3,2, 1/q1);
        D2flux.set(i,8,8,4,2, 0);
        D2flux.set(i,8,8,5,2, 0);
        D2flux.set(i,8,8,6,2, 0);
        D2flux.set(i,8,8,7,2, 0);
        D2flux.set(i,8,8,8,2, 0);

        //Computing the Hessian of the flux function: h''(q)

        D2flux.set(i,1,1,1,3, 0);
        D2flux.set(i,1,1,2,3, 0);
        D2flux.set(i,1,1,3,3, 0);
        D2flux.set(i,1,1,4,3, 0);
        D2flux.set(i,1,1,5,3, 0);
        D2flux.set(i,1,1,6,3, 0);
        D2flux.set(i,1,1,7,3, 0);
        D2flux.set(i,1,1,8,3, 0);
        D2flux.set(i,1,2,1,3, 0);
        D2flux.set(i,1,2,2,3, 0);
        D2flux.set(i,1,2,3,3, 0);
        D2flux.set(i,1,2,4,3, 0);
        D2flux.set(i,1,2,5,3, 0);
        D2flux.set(i,1,2,6,3, 0);
        D2flux.set(i,1,2,7,3, 0);
        D2flux.set(i,1,2,8,3, 0);
        D2flux.set(i,1,3,1,3, 0);
        D2flux.set(i,1,3,2,3, 0);
        D2flux.set(i,1,3,3,3, 0);
        D2flux.set(i,1,3,4,3, 0);
        D2flux.set(i,1,3,5,3, 0);
        D2flux.set(i,1,3,6,3, 0);
        D2flux.set(i,1,3,7,3, 0);
        D2flux.set(i,1,3,8,3, 0);
        D2flux.set(i,1,4,1,3, 0);
        D2flux.set(i,1,4,2,3, 0);
        D2flux.set(i,1,4,3,3, 0);
        D2flux.set(i,1,4,4,3, 0);
        D2flux.set(i,1,4,5,3, 0);
        D2flux.set(i,1,4,6,3, 0);
        D2flux.set(i,1,4,7,3, 0);
        D2flux.set(i,1,4,8,3, 0);
        D2flux.set(i,1,5,1,3, 0);
        D2flux.set(i,1,5,2,3, 0);
        D2flux.set(i,1,5,3,3, 0);
        D2flux.set(i,1,5,4,3, 0);
        D2flux.set(i,1,5,5,3, 0);
        D2flux.set(i,1,5,6,3, 0);
        D2flux.set(i,1,5,7,3, 0);
        D2flux.set(i,1,5,8,3, 0);
        D2flux.set(i,1,6,1,3, 0);
        D2flux.set(i,1,6,2,3, 0);
        D2flux.set(i,1,6,3,3, 0);
        D2flux.set(i,1,6,4,3, 0);
        D2flux.set(i,1,6,5,3, 0);
        D2flux.set(i,1,6,6,3, 0);
        D2flux.set(i,1,6,7,3, 0);
        D2flux.set(i,1,6,8,3, 0);
        D2flux.set(i,1,7,1,3, 0);
        D2flux.set(i,1,7,2,3, 0);
        D2flux.set(i,1,7,3,3, 0);
        D2flux.set(i,1,7,4,3, 0);
        D2flux.set(i,1,7,5,3, 0);
        D2flux.set(i,1,7,6,3, 0);
        D2flux.set(i,1,7,7,3, 0);
        D2flux.set(i,1,7,8,3, 0);
        D2flux.set(i,1,8,1,3, 0);
        D2flux.set(i,1,8,2,3, 0);
        D2flux.set(i,1,8,3,3, 0);
        D2flux.set(i,1,8,4,3, 0);
        D2flux.set(i,1,8,5,3, 0);
        D2flux.set(i,1,8,6,3, 0);
        D2flux.set(i,1,8,7,3, 0);
        D2flux.set(i,1,8,8,3, 0);

        D2flux.set(i,2,1,1,3, 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,2,1,2,3, -q4/pow( q1, 2 ));
        D2flux.set(i,2,1,3,3, 0);
        D2flux.set(i,2,1,4,3, -q2/pow( q1, 2 ));
        D2flux.set(i,2,1,5,3, 0);
        D2flux.set(i,2,1,6,3, 0);
        D2flux.set(i,2,1,7,3, 0);
        D2flux.set(i,2,1,8,3, 0);
        D2flux.set(i,2,2,1,3, -q4/pow( q1, 2 ));
        D2flux.set(i,2,2,2,3, 0);
        D2flux.set(i,2,2,3,3, 0);
        D2flux.set(i,2,2,4,3, 1/q1);
        D2flux.set(i,2,2,5,3, 0);
        D2flux.set(i,2,2,6,3, 0);
        D2flux.set(i,2,2,7,3, 0);
        D2flux.set(i,2,2,8,3, 0);
        D2flux.set(i,2,3,1,3, 0);
        D2flux.set(i,2,3,2,3, 0);
        D2flux.set(i,2,3,3,3, 0);
        D2flux.set(i,2,3,4,3, 0);
        D2flux.set(i,2,3,5,3, 0);
        D2flux.set(i,2,3,6,3, 0);
        D2flux.set(i,2,3,7,3, 0);
        D2flux.set(i,2,3,8,3, 0);
        D2flux.set(i,2,4,1,3, -q2/pow( q1, 2 ));
        D2flux.set(i,2,4,2,3, 1/q1);
        D2flux.set(i,2,4,3,3, 0);
        D2flux.set(i,2,4,4,3, 0);
        D2flux.set(i,2,4,5,3, 0);
        D2flux.set(i,2,4,6,3, 0);
        D2flux.set(i,2,4,7,3, 0);
        D2flux.set(i,2,4,8,3, 0);
        D2flux.set(i,2,5,1,3, 0);
        D2flux.set(i,2,5,2,3, 0);
        D2flux.set(i,2,5,3,3, 0);
        D2flux.set(i,2,5,4,3, 0);
        D2flux.set(i,2,5,5,3, 0);
        D2flux.set(i,2,5,6,3, 0);
        D2flux.set(i,2,5,7,3, 0);
        D2flux.set(i,2,5,8,3, 0);
        D2flux.set(i,2,6,1,3, 0);
        D2flux.set(i,2,6,2,3, 0);
        D2flux.set(i,2,6,3,3, 0);
        D2flux.set(i,2,6,4,3, 0);
        D2flux.set(i,2,6,5,3, 0);
        D2flux.set(i,2,6,6,3, 0);
        D2flux.set(i,2,6,7,3, 0);
        D2flux.set(i,2,6,8,3, -1);
        D2flux.set(i,2,7,1,3, 0);
        D2flux.set(i,2,7,2,3, 0);
        D2flux.set(i,2,7,3,3, 0);
        D2flux.set(i,2,7,4,3, 0);
        D2flux.set(i,2,7,5,3, 0);
        D2flux.set(i,2,7,6,3, 0);
        D2flux.set(i,2,7,7,3, 0);
        D2flux.set(i,2,7,8,3, 0);
        D2flux.set(i,2,8,1,3, 0);
        D2flux.set(i,2,8,2,3, 0);
        D2flux.set(i,2,8,3,3, 0);
        D2flux.set(i,2,8,4,3, 0);
        D2flux.set(i,2,8,5,3, 0);
        D2flux.set(i,2,8,6,3, -1);
        D2flux.set(i,2,8,7,3, 0);
        D2flux.set(i,2,8,8,3, 0);

        D2flux.set(i,3,1,1,3, 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,3,1,2,3, 0);
        D2flux.set(i,3,1,3,3, -q4/pow( q1, 2 ));
        D2flux.set(i,3,1,4,3, -q3/pow( q1, 2 ));
        D2flux.set(i,3,1,5,3, 0);
        D2flux.set(i,3,1,6,3, 0);
        D2flux.set(i,3,1,7,3, 0);
        D2flux.set(i,3,1,8,3, 0);
        D2flux.set(i,3,2,1,3, 0);
        D2flux.set(i,3,2,2,3, 0);
        D2flux.set(i,3,2,3,3, 0);
        D2flux.set(i,3,2,4,3, 0);
        D2flux.set(i,3,2,5,3, 0);
        D2flux.set(i,3,2,6,3, 0);
        D2flux.set(i,3,2,7,3, 0);
        D2flux.set(i,3,2,8,3, 0);
        D2flux.set(i,3,3,1,3, -q4/pow( q1, 2 ));
        D2flux.set(i,3,3,2,3, 0);
        D2flux.set(i,3,3,3,3, 0);
        D2flux.set(i,3,3,4,3, 1/q1);
        D2flux.set(i,3,3,5,3, 0);
        D2flux.set(i,3,3,6,3, 0);
        D2flux.set(i,3,3,7,3, 0);
        D2flux.set(i,3,3,8,3, 0);
        D2flux.set(i,3,4,1,3, -q3/pow( q1, 2 ));
        D2flux.set(i,3,4,2,3, 0);
        D2flux.set(i,3,4,3,3, 1/q1);
        D2flux.set(i,3,4,4,3, 0);
        D2flux.set(i,3,4,5,3, 0);
        D2flux.set(i,3,4,6,3, 0);
        D2flux.set(i,3,4,7,3, 0);
        D2flux.set(i,3,4,8,3, 0);
        D2flux.set(i,3,5,1,3, 0);
        D2flux.set(i,3,5,2,3, 0);
        D2flux.set(i,3,5,3,3, 0);
        D2flux.set(i,3,5,4,3, 0);
        D2flux.set(i,3,5,5,3, 0);
        D2flux.set(i,3,5,6,3, 0);
        D2flux.set(i,3,5,7,3, 0);
        D2flux.set(i,3,5,8,3, 0);
        D2flux.set(i,3,6,1,3, 0);
        D2flux.set(i,3,6,2,3, 0);
        D2flux.set(i,3,6,3,3, 0);
        D2flux.set(i,3,6,4,3, 0);
        D2flux.set(i,3,6,5,3, 0);
        D2flux.set(i,3,6,6,3, 0);
        D2flux.set(i,3,6,7,3, 0);
        D2flux.set(i,3,6,8,3, 0);
        D2flux.set(i,3,7,1,3, 0);
        D2flux.set(i,3,7,2,3, 0);
        D2flux.set(i,3,7,3,3, 0);
        D2flux.set(i,3,7,4,3, 0);
        D2flux.set(i,3,7,5,3, 0);
        D2flux.set(i,3,7,6,3, 0);
        D2flux.set(i,3,7,7,3, 0);
        D2flux.set(i,3,7,8,3, -1);
        D2flux.set(i,3,8,1,3, 0);
        D2flux.set(i,3,8,2,3, 0);
        D2flux.set(i,3,8,3,3, 0);
        D2flux.set(i,3,8,4,3, 0);
        D2flux.set(i,3,8,5,3, 0);
        D2flux.set(i,3,8,6,3, 0);
        D2flux.set(i,3,8,7,3, -1);
        D2flux.set(i,3,8,8,3, 0);

        D2flux.set(i,4,1,1,3, -gamma*pow( q2, 2 )/pow( q1, 3 ) - gamma*pow( q3, 2 )/pow( q1, 3 ) - gamma*pow( q4, 2 )/pow( q1, 3 ) + pow( q2, 2 )/pow( q1, 3 ) + pow( q3, 2 )/pow( q1, 3 ) + 3*pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,4,1,2,3, gamma*q2/pow( q1, 2 ) - q2/pow( q1, 2 ));
        D2flux.set(i,4,1,3,3, gamma*q3/pow( q1, 2 ) - q3/pow( q1, 2 ));
        D2flux.set(i,4,1,4,3, gamma*q4/pow( q1, 2 ) - 3*q4/pow( q1, 2 ));
        D2flux.set(i,4,1,5,3, 0);
        D2flux.set(i,4,1,6,3, 0);
        D2flux.set(i,4,1,7,3, 0);
        D2flux.set(i,4,1,8,3, 0);
        D2flux.set(i,4,2,1,3, gamma*q2/pow( q1, 2 ) - q2/pow( q1, 2 ));
        D2flux.set(i,4,2,2,3, -gamma/q1 + 1/q1);
        D2flux.set(i,4,2,3,3, 0);
        D2flux.set(i,4,2,4,3, 0);
        D2flux.set(i,4,2,5,3, 0);
        D2flux.set(i,4,2,6,3, 0);
        D2flux.set(i,4,2,7,3, 0);
        D2flux.set(i,4,2,8,3, 0);
        D2flux.set(i,4,3,1,3, gamma*q3/pow( q1, 2 ) - q3/pow( q1, 2 ));
        D2flux.set(i,4,3,2,3, 0);
        D2flux.set(i,4,3,3,3, -gamma/q1 + 1/q1);
        D2flux.set(i,4,3,4,3, 0);
        D2flux.set(i,4,3,5,3, 0);
        D2flux.set(i,4,3,6,3, 0);
        D2flux.set(i,4,3,7,3, 0);
        D2flux.set(i,4,3,8,3, 0);
        D2flux.set(i,4,4,1,3, gamma*q4/pow( q1, 2 ) - 3*q4/pow( q1, 2 ));
        D2flux.set(i,4,4,2,3, 0);
        D2flux.set(i,4,4,3,3, 0);
        D2flux.set(i,4,4,4,3, -gamma/q1 + 3/q1);
        D2flux.set(i,4,4,5,3, 0);
        D2flux.set(i,4,4,6,3, 0);
        D2flux.set(i,4,4,7,3, 0);
        D2flux.set(i,4,4,8,3, 0);
        D2flux.set(i,4,5,1,3, 0);
        D2flux.set(i,4,5,2,3, 0);
        D2flux.set(i,4,5,3,3, 0);
        D2flux.set(i,4,5,4,3, 0);
        D2flux.set(i,4,5,5,3, 0);
        D2flux.set(i,4,5,6,3, 0);
        D2flux.set(i,4,5,7,3, 0);
        D2flux.set(i,4,5,8,3, 0);
        D2flux.set(i,4,6,1,3, 0);
        D2flux.set(i,4,6,2,3, 0);
        D2flux.set(i,4,6,3,3, 0);
        D2flux.set(i,4,6,4,3, 0);
        D2flux.set(i,4,6,5,3, 0);
        D2flux.set(i,4,6,6,3, -gamma + 2);
        D2flux.set(i,4,6,7,3, 0);
        D2flux.set(i,4,6,8,3, 0);
        D2flux.set(i,4,7,1,3, 0);
        D2flux.set(i,4,7,2,3, 0);
        D2flux.set(i,4,7,3,3, 0);
        D2flux.set(i,4,7,4,3, 0);
        D2flux.set(i,4,7,5,3, 0);
        D2flux.set(i,4,7,6,3, 0);
        D2flux.set(i,4,7,7,3, -gamma + 2);
        D2flux.set(i,4,7,8,3, 0);
        D2flux.set(i,4,8,1,3, 0);
        D2flux.set(i,4,8,2,3, 0);
        D2flux.set(i,4,8,3,3, 0);
        D2flux.set(i,4,8,4,3, 0);
        D2flux.set(i,4,8,5,3, 0);
        D2flux.set(i,4,8,6,3, 0);
        D2flux.set(i,4,8,7,3, 0);
        D2flux.set(i,4,8,8,3, -gamma);

        D2flux.set(i,5,1,1,3, 2*gamma*q4*q5/pow( q1, 3 ) - gamma*q4*pow( q6, 2 )/pow( q1, 3 ) - gamma*q4*pow( q7, 2 )/pow( q1, 3 ) - gamma*q4*pow( q8, 2 )/pow( q1, 3 ) - 3*gamma*pow( q2, 2 )*q4/pow( q1, 4 ) - 3*gamma*pow( q3, 2 )*q4/pow( q1, 4 ) - 3*gamma*pow( q4, 3 )/pow( q1, 4 ) - 2*q2*q6*q8/pow( q1, 3 ) - 2*q3*q7*q8/pow( q1, 3 ) + 2*q4*pow( q6, 2 )/pow( q1, 3 ) + 2*q4*pow( q7, 2 )/pow( q1, 3 ) + 3*pow( q2, 2 )*q4/pow( q1, 4 ) + 3*pow( q3, 2 )*q4/pow( q1, 4 ) + 3*pow( q4, 3 )/pow( q1, 4 ));
        D2flux.set(i,5,1,2,3, 2*gamma*q2*q4/pow( q1, 3 ) + q6*q8/pow( q1, 2 ) - 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,5,1,3,3, 2*gamma*q3*q4/pow( q1, 3 ) + q7*q8/pow( q1, 2 ) - 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,5,1,4,3, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + gamma*pow( q2, 2 )/pow( q1, 3 ) + gamma*pow( q3, 2 )/pow( q1, 3 ) + 3*gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q6, 2 )/pow( q1, 2 ) - pow( q7, 2 )/pow( q1, 2 ) - pow( q2, 2 )/pow( q1, 3 ) - pow( q3, 2 )/pow( q1, 3 ) - 3*pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,1,5,3, -gamma*q4/pow( q1, 2 ));
        D2flux.set(i,5,1,6,3, gamma*q4*q6/pow( q1, 2 ) + q2*q8/pow( q1, 2 ) - 2*q4*q6/pow( q1, 2 ));
        D2flux.set(i,5,1,7,3, gamma*q4*q7/pow( q1, 2 ) + q3*q8/pow( q1, 2 ) - 2*q4*q7/pow( q1, 2 ));
        D2flux.set(i,5,1,8,3, gamma*q4*q8/pow( q1, 2 ) + q2*q6/pow( q1, 2 ) + q3*q7/pow( q1, 2 ));
        D2flux.set(i,5,2,1,3, 2*gamma*q2*q4/pow( q1, 3 ) + q6*q8/pow( q1, 2 ) - 2*q2*q4/pow( q1, 3 ));
        D2flux.set(i,5,2,2,3, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,2,3,3, 0);
        D2flux.set(i,5,2,4,3, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,2,5,3, 0);
        D2flux.set(i,5,2,6,3, -q8/q1);
        D2flux.set(i,5,2,7,3, 0);
        D2flux.set(i,5,2,8,3, -q6/q1);
        D2flux.set(i,5,3,1,3, 2*gamma*q3*q4/pow( q1, 3 ) + q7*q8/pow( q1, 2 ) - 2*q3*q4/pow( q1, 3 ));
        D2flux.set(i,5,3,2,3, 0);
        D2flux.set(i,5,3,3,3, -gamma*q4/pow( q1, 2 ) + q4/pow( q1, 2 ));
        D2flux.set(i,5,3,4,3, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,3,5,3, 0);
        D2flux.set(i,5,3,6,3, 0);
        D2flux.set(i,5,3,7,3, -q8/q1);
        D2flux.set(i,5,3,8,3, -q7/q1);
        D2flux.set(i,5,4,1,3, -gamma*q5/pow( q1, 2 ) + gamma*pow( q6, 2 )/(2*pow( q1, 2 )) + gamma*pow( q7, 2 )/(2*pow( q1, 2 )) + gamma*pow( q8, 2 )/(2*pow( q1, 2 )) + gamma*pow( q2, 2 )/pow( q1, 3 ) + gamma*pow( q3, 2 )/pow( q1, 3 ) + 3*gamma*pow( q4, 2 )/pow( q1, 3 ) - pow( q6, 2 )/pow( q1, 2 ) - pow( q7, 2 )/pow( q1, 2 ) - pow( q2, 2 )/pow( q1, 3 ) - pow( q3, 2 )/pow( q1, 3 ) - 3*pow( q4, 2 )/pow( q1, 3 ));
        D2flux.set(i,5,4,2,3, -gamma*q2/pow( q1, 2 ) + q2/pow( q1, 2 ));
        D2flux.set(i,5,4,3,3, -gamma*q3/pow( q1, 2 ) + q3/pow( q1, 2 ));
        D2flux.set(i,5,4,4,3, -3*gamma*q4/pow( q1, 2 ) + 3*q4/pow( q1, 2 ));
        D2flux.set(i,5,4,5,3, gamma/q1);
        D2flux.set(i,5,4,6,3, -gamma*q6/q1 + 2*q6/q1);
        D2flux.set(i,5,4,7,3, -gamma*q7/q1 + 2*q7/q1);
        D2flux.set(i,5,4,8,3, -gamma*q8/q1);
        D2flux.set(i,5,5,1,3, -gamma*q4/pow( q1, 2 ));
        D2flux.set(i,5,5,2,3, 0);
        D2flux.set(i,5,5,3,3, 0);
        D2flux.set(i,5,5,4,3, gamma/q1);
        D2flux.set(i,5,5,5,3, 0);
        D2flux.set(i,5,5,6,3, 0);
        D2flux.set(i,5,5,7,3, 0);
        D2flux.set(i,5,5,8,3, 0);
        D2flux.set(i,5,6,1,3, gamma*q4*q6/pow( q1, 2 ) + q2*q8/pow( q1, 2 ) - 2*q4*q6/pow( q1, 2 ));
        D2flux.set(i,5,6,2,3, -q8/q1);
        D2flux.set(i,5,6,3,3, 0);
        D2flux.set(i,5,6,4,3, -gamma*q6/q1 + 2*q6/q1);
        D2flux.set(i,5,6,5,3, 0);
        D2flux.set(i,5,6,6,3, -gamma*q4/q1 + 2*q4/q1);
        D2flux.set(i,5,6,7,3, 0);
        D2flux.set(i,5,6,8,3, -q2/q1);
        D2flux.set(i,5,7,1,3, gamma*q4*q7/pow( q1, 2 ) + q3*q8/pow( q1, 2 ) - 2*q4*q7/pow( q1, 2 ));
        D2flux.set(i,5,7,2,3, 0);
        D2flux.set(i,5,7,3,3, -q8/q1);
        D2flux.set(i,5,7,4,3, -gamma*q7/q1 + 2*q7/q1);
        D2flux.set(i,5,7,5,3, 0);
        D2flux.set(i,5,7,6,3, 0);
        D2flux.set(i,5,7,7,3, -gamma*q4/q1 + 2*q4/q1);
        D2flux.set(i,5,7,8,3, -q3/q1);
        D2flux.set(i,5,8,1,3, gamma*q4*q8/pow( q1, 2 ) + q2*q6/pow( q1, 2 ) + q3*q7/pow( q1, 2 ));
        D2flux.set(i,5,8,2,3, -q6/q1);
        D2flux.set(i,5,8,3,3, -q7/q1);
        D2flux.set(i,5,8,4,3, -gamma*q8/q1);
        D2flux.set(i,5,8,5,3, 0);
        D2flux.set(i,5,8,6,3, -q2/q1);
        D2flux.set(i,5,8,7,3, -q3/q1);
        D2flux.set(i,5,8,8,3, -gamma*q4/q1);

        D2flux.set(i,6,1,1,3, -2*q2*q8/pow( q1, 3 ) + 2*q4*q6/pow( q1, 3 ));
        D2flux.set(i,6,1,2,3, q8/pow( q1, 2 ));
        D2flux.set(i,6,1,3,3, 0);
        D2flux.set(i,6,1,4,3, -q6/pow( q1, 2 ));
        D2flux.set(i,6,1,5,3, 0);
        D2flux.set(i,6,1,6,3, -q4/pow( q1, 2 ));
        D2flux.set(i,6,1,7,3, 0);
        D2flux.set(i,6,1,8,3, q2/pow( q1, 2 ));
        D2flux.set(i,6,2,1,3, q8/pow( q1, 2 ));
        D2flux.set(i,6,2,2,3, 0);
        D2flux.set(i,6,2,3,3, 0);
        D2flux.set(i,6,2,4,3, 0);
        D2flux.set(i,6,2,5,3, 0);
        D2flux.set(i,6,2,6,3, 0);
        D2flux.set(i,6,2,7,3, 0);
        D2flux.set(i,6,2,8,3, -1/q1);
        D2flux.set(i,6,3,1,3, 0);
        D2flux.set(i,6,3,2,3, 0);
        D2flux.set(i,6,3,3,3, 0);
        D2flux.set(i,6,3,4,3, 0);
        D2flux.set(i,6,3,5,3, 0);
        D2flux.set(i,6,3,6,3, 0);
        D2flux.set(i,6,3,7,3, 0);
        D2flux.set(i,6,3,8,3, 0);
        D2flux.set(i,6,4,1,3, -q6/pow( q1, 2 ));
        D2flux.set(i,6,4,2,3, 0);
        D2flux.set(i,6,4,3,3, 0);
        D2flux.set(i,6,4,4,3, 0);
        D2flux.set(i,6,4,5,3, 0);
        D2flux.set(i,6,4,6,3, 1/q1);
        D2flux.set(i,6,4,7,3, 0);
        D2flux.set(i,6,4,8,3, 0);
        D2flux.set(i,6,5,1,3, 0);
        D2flux.set(i,6,5,2,3, 0);
        D2flux.set(i,6,5,3,3, 0);
        D2flux.set(i,6,5,4,3, 0);
        D2flux.set(i,6,5,5,3, 0);
        D2flux.set(i,6,5,6,3, 0);
        D2flux.set(i,6,5,7,3, 0);
        D2flux.set(i,6,5,8,3, 0);
        D2flux.set(i,6,6,1,3, -q4/pow( q1, 2 ));
        D2flux.set(i,6,6,2,3, 0);
        D2flux.set(i,6,6,3,3, 0);
        D2flux.set(i,6,6,4,3, 1/q1);
        D2flux.set(i,6,6,5,3, 0);
        D2flux.set(i,6,6,6,3, 0);
        D2flux.set(i,6,6,7,3, 0);
        D2flux.set(i,6,6,8,3, 0);
        D2flux.set(i,6,7,1,3, 0);
        D2flux.set(i,6,7,2,3, 0);
        D2flux.set(i,6,7,3,3, 0);
        D2flux.set(i,6,7,4,3, 0);
        D2flux.set(i,6,7,5,3, 0);
        D2flux.set(i,6,7,6,3, 0);
        D2flux.set(i,6,7,7,3, 0);
        D2flux.set(i,6,7,8,3, 0);
        D2flux.set(i,6,8,1,3, q2/pow( q1, 2 ));
        D2flux.set(i,6,8,2,3, -1/q1);
        D2flux.set(i,6,8,3,3, 0);
        D2flux.set(i,6,8,4,3, 0);
        D2flux.set(i,6,8,5,3, 0);
        D2flux.set(i,6,8,6,3, 0);
        D2flux.set(i,6,8,7,3, 0);
        D2flux.set(i,6,8,8,3, 0);

        D2flux.set(i,7,1,1,3, -2*q3*q8/pow( q1, 3 ) + 2*q4*q7/pow( q1, 3 ));
        D2flux.set(i,7,1,2,3, 0);
        D2flux.set(i,7,1,3,3, q8/pow( q1, 2 ));
        D2flux.set(i,7,1,4,3, -q7/pow( q1, 2 ));
        D2flux.set(i,7,1,5,3, 0);
        D2flux.set(i,7,1,6,3, 0);
        D2flux.set(i,7,1,7,3, -q4/pow( q1, 2 ));
        D2flux.set(i,7,1,8,3, q3/pow( q1, 2 ));
        D2flux.set(i,7,2,1,3, 0);
        D2flux.set(i,7,2,2,3, 0);
        D2flux.set(i,7,2,3,3, 0);
        D2flux.set(i,7,2,4,3, 0);
        D2flux.set(i,7,2,5,3, 0);
        D2flux.set(i,7,2,6,3, 0);
        D2flux.set(i,7,2,7,3, 0);
        D2flux.set(i,7,2,8,3, 0);
        D2flux.set(i,7,3,1,3, q8/pow( q1, 2 ));
        D2flux.set(i,7,3,2,3, 0);
        D2flux.set(i,7,3,3,3, 0);
        D2flux.set(i,7,3,4,3, 0);
        D2flux.set(i,7,3,5,3, 0);
        D2flux.set(i,7,3,6,3, 0);
        D2flux.set(i,7,3,7,3, 0);
        D2flux.set(i,7,3,8,3, -1/q1);
        D2flux.set(i,7,4,1,3, -q7/pow( q1, 2 ));
        D2flux.set(i,7,4,2,3, 0);
        D2flux.set(i,7,4,3,3, 0);
        D2flux.set(i,7,4,4,3, 0);
        D2flux.set(i,7,4,5,3, 0);
        D2flux.set(i,7,4,6,3, 0);
        D2flux.set(i,7,4,7,3, 1/q1);
        D2flux.set(i,7,4,8,3, 0);
        D2flux.set(i,7,5,1,3, 0);
        D2flux.set(i,7,5,2,3, 0);
        D2flux.set(i,7,5,3,3, 0);
        D2flux.set(i,7,5,4,3, 0);
        D2flux.set(i,7,5,5,3, 0);
        D2flux.set(i,7,5,6,3, 0);
        D2flux.set(i,7,5,7,3, 0);
        D2flux.set(i,7,5,8,3, 0);
        D2flux.set(i,7,6,1,3, 0);
        D2flux.set(i,7,6,2,3, 0);
        D2flux.set(i,7,6,3,3, 0);
        D2flux.set(i,7,6,4,3, 0);
        D2flux.set(i,7,6,5,3, 0);
        D2flux.set(i,7,6,6,3, 0);
        D2flux.set(i,7,6,7,3, 0);
        D2flux.set(i,7,6,8,3, 0);
        D2flux.set(i,7,7,1,3, -q4/pow( q1, 2 ));
        D2flux.set(i,7,7,2,3, 0);
        D2flux.set(i,7,7,3,3, 0);
        D2flux.set(i,7,7,4,3, 1/q1);
        D2flux.set(i,7,7,5,3, 0);
        D2flux.set(i,7,7,6,3, 0);
        D2flux.set(i,7,7,7,3, 0);
        D2flux.set(i,7,7,8,3, 0);
        D2flux.set(i,7,8,1,3, q3/pow( q1, 2 ));
        D2flux.set(i,7,8,2,3, 0);
        D2flux.set(i,7,8,3,3, -1/q1);
        D2flux.set(i,7,8,4,3, 0);
        D2flux.set(i,7,8,5,3, 0);
        D2flux.set(i,7,8,6,3, 0);
        D2flux.set(i,7,8,7,3, 0);
        D2flux.set(i,7,8,8,3, 0);

        D2flux.set(i,8,1,1,3, 0);
        D2flux.set(i,8,1,2,3, 0);
        D2flux.set(i,8,1,3,3, 0);
        D2flux.set(i,8,1,4,3, 0);
        D2flux.set(i,8,1,5,3, 0);
        D2flux.set(i,8,1,6,3, 0);
        D2flux.set(i,8,1,7,3, 0);
        D2flux.set(i,8,1,8,3, 0);
        D2flux.set(i,8,2,1,3, 0);
        D2flux.set(i,8,2,2,3, 0);
        D2flux.set(i,8,2,3,3, 0);
        D2flux.set(i,8,2,4,3, 0);
        D2flux.set(i,8,2,5,3, 0);
        D2flux.set(i,8,2,6,3, 0);
        D2flux.set(i,8,2,7,3, 0);
        D2flux.set(i,8,2,8,3, 0);
        D2flux.set(i,8,3,1,3, 0);
        D2flux.set(i,8,3,2,3, 0);
        D2flux.set(i,8,3,3,3, 0);
        D2flux.set(i,8,3,4,3, 0);
        D2flux.set(i,8,3,5,3, 0);
        D2flux.set(i,8,3,6,3, 0);
        D2flux.set(i,8,3,7,3, 0);
        D2flux.set(i,8,3,8,3, 0);
        D2flux.set(i,8,4,1,3, 0);
        D2flux.set(i,8,4,2,3, 0);
        D2flux.set(i,8,4,3,3, 0);
        D2flux.set(i,8,4,4,3, 0);
        D2flux.set(i,8,4,5,3, 0);
        D2flux.set(i,8,4,6,3, 0);
        D2flux.set(i,8,4,7,3, 0);
        D2flux.set(i,8,4,8,3, 0);
        D2flux.set(i,8,5,1,3, 0);
        D2flux.set(i,8,5,2,3, 0);
        D2flux.set(i,8,5,3,3, 0);
        D2flux.set(i,8,5,4,3, 0);
        D2flux.set(i,8,5,5,3, 0);
        D2flux.set(i,8,5,6,3, 0);
        D2flux.set(i,8,5,7,3, 0);
        D2flux.set(i,8,5,8,3, 0);
        D2flux.set(i,8,6,1,3, 0);
        D2flux.set(i,8,6,2,3, 0);
        D2flux.set(i,8,6,3,3, 0);
        D2flux.set(i,8,6,4,3, 0);
        D2flux.set(i,8,6,5,3, 0);
        D2flux.set(i,8,6,6,3, 0);
        D2flux.set(i,8,6,7,3, 0);
        D2flux.set(i,8,6,8,3, 0);
        D2flux.set(i,8,7,1,3, 0);
        D2flux.set(i,8,7,2,3, 0);
        D2flux.set(i,8,7,3,3, 0);
        D2flux.set(i,8,7,4,3, 0);
        D2flux.set(i,8,7,5,3, 0);
        D2flux.set(i,8,7,6,3, 0);
        D2flux.set(i,8,7,7,3, 0);
        D2flux.set(i,8,7,8,3, 0);
        D2flux.set(i,8,8,1,3, 0);
        D2flux.set(i,8,8,2,3, 0);
        D2flux.set(i,8,8,3,3, 0);
        D2flux.set(i,8,8,4,3, 0);
        D2flux.set(i,8,8,5,3, 0);
        D2flux.set(i,8,8,6,3, 0);
        D2flux.set(i,8,8,7,3, 0);
        D2flux.set(i,8,8,8,3, 0);
    }

}
