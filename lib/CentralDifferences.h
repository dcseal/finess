#ifndef _CENTRAL_DIFFERENCES_H_
#define _CENTRAL_DIFFERENCES_H_

// -- Reconstructions based on linear weights -- //
//
// There's no need to call these directly.  In place of extra overhead for
// checking which method to use inside a for loop, instead use
// GetCentralDifferences one time.
void CentralDifferences5( const dTensor2& g, dTensor2& g_reconst );
void CentralDifferences7( const dTensor2& g, dTensor2& g_reconst );
void CentralDifferences9( const dTensor2& g, dTensor2& g_reconst );

// Wrapper function that provides access to each of the above through looking
// at the global variable wenoParams.
//void (*GetWenoReconstruct())(const dTensor2& g, dTensor2& g_reconst);
typedef void (*central_differences_t)(const dTensor2&, dTensor2&);
central_differences_t GetCentralDifferences();

// Matrices used for computing derivatives.  
//
// See $FINESS/symbolic_tools/construct-central-difference-code.py or
// http://en.wikipedia.org/wiki/Finite_difference_coefficient
// for more details.
const double deriv_matrix5[4][5] = {
    { 8.3333333333333328707404064e-02, -6.6666666666666662965923251e-01, 0.0000000000000000000000000e+00, 6.6666666666666662965923251e-01, -8.3333333333333328707404064e-02 },
    { -8.3333333333333328707404064e-02, 1.3333333333333332593184650e+00, -2.5000000000000000000000000e+00, 1.3333333333333332593184650e+00, -8.3333333333333328707404064e-02 },
    { -5.0000000000000000000000000e-01, 1.0000000000000000000000000e+00, 0.0000000000000000000000000e+00, -1.0000000000000000000000000e+00, 5.0000000000000000000000000e-01 },
    { 1.0000000000000000000000000e+00, -4.0000000000000000000000000e+00, 6.0000000000000000000000000e+00, -4.0000000000000000000000000e+00, 1.0000000000000000000000000e+00 }
};

const double deriv_matrix7[6][7] = {
    { 3.3333333333333332870740406e-02, -4.0000000000000002220446049e-01, -5.8333333333333337034076749e-01, 1.3333333333333332593184650e+00, -5.0000000000000000000000000e-01, 1.3333333333333333148296163e-01, -1.6666666666666666435370203e-02 },
    { -7.2222222222222215437525961e-02, 1.2666666666666666074547720e+00, -2.3333333333333334813630700e+00, 1.1111111111111111604543567e+00, 8.3333333333333328707404064e-02, -6.6666666666666665741480813e-02, 1.1111111111111111535154627e-02 },
    { -1.2500000000000000000000000e-01, -1.0000000000000000000000000e+00, 4.3750000000000000000000000e+00, -6.0000000000000000000000000e+00, 3.6250000000000000000000000e+00, -1.0000000000000000000000000e+00, 1.2500000000000000000000000e-01 },
    { 8.3333333333333337034076749e-01, -3.0000000000000000000000000e+00, 3.5000000000000000000000000e+00, -6.6666666666666662965923251e-01, -1.5000000000000000000000000e+00, 1.0000000000000000000000000e+00, -1.6666666666666665741480813e-01 },
    { -1.5000000000000000000000000e+00, 8.0000000000000000000000000e+00, -1.7500000000000000000000000e+01, 2.0000000000000000000000000e+01, -1.2500000000000000000000000e+01, 4.0000000000000000000000000e+00, -5.0000000000000000000000000e-01 },
    { 1.0000000000000000000000000e+00, -6.0000000000000000000000000e+00, 1.5000000000000000000000000e+01, -2.0000000000000000000000000e+01, 1.5000000000000000000000000e+01, -6.0000000000000000000000000e+00, 1.0000000000000000000000000e+00 }
};

const double deriv_matrix9[8][9] = {
    { 1.7857142857142856151586585e-02, -2.8571428571428569842538536e-01, -9.4999999999999995559107901e-01, 2.0000000000000000000000000e+00, -1.2500000000000000000000000e+00, 6.6666666666666662965923251e-01, -2.5000000000000000000000000e-01, 5.7142857142857141072855853e-02, -5.9523809523809520505288617e-03 },
    { -5.1785714285714289084605610e-02, 1.1142857142857143237790751e+00, -1.8388888888888887951367224e+00, 2.0000000000000001110223025e-01, 1.1250000000000000000000000e+00, -8.2222222222222218768195034e-01, 3.4999999999999997779553951e-01, -8.5714285714285715078730732e-02, 9.3253968253968252261065786e-03 },
    { -2.0833333333333332176851016e-02, -1.7666666666666666074547720e+00, 6.8250000000000001776356839e+00, -1.0433333333333333570180912e+01, 8.5833333333333339254522798e+00, -4.5000000000000000000000000e+00, 1.6416666666666666074547720e+00, -3.6666666666666664076146276e-01, 3.7499999999999998612221219e-02 },
    { 5.2916666666666667406815350e-01, -7.3333333333333328152292552e-01, -3.8500000000000000888178420e+00, 1.2866666666666667140361824e+01, -1.6958333333333332149095440e+01, 1.2199999999999999289457264e+01, -5.1833333333333335701809119e+00, 1.2666666666666666074547720e+00, -1.3750000000000001110223025e-01 },
    { -1.6666666666666667406815350e+00, 9.1666666666666660745477202e+00, -2.1000000000000000000000000e+01, 2.5833333333333332149095440e+01, -1.8333333333333332149095440e+01, 7.5000000000000000000000000e+00, -1.6666666666666667406815350e+00, 1.6666666666666665741480813e-01, 0.0000000000000000000000000e+00 },
    { 2.7500000000000000000000000e+00, -1.9000000000000000000000000e+01, 5.7000000000000000000000000e+01, -9.7000000000000000000000000e+01, 1.0250000000000000000000000e+02, -6.9000000000000000000000000e+01, 2.9000000000000000000000000e+01, -7.0000000000000000000000000e+00, 7.5000000000000000000000000e-01 },
    { -2.5000000000000000000000000e+00, 1.9000000000000000000000000e+01, -6.3000000000000000000000000e+01, 1.1900000000000000000000000e+02, -1.4000000000000000000000000e+02, 1.0500000000000000000000000e+02, -4.9000000000000000000000000e+01, 1.3000000000000000000000000e+01, -1.5000000000000000000000000e+00 },
    { 1.0000000000000000000000000e+00, -8.0000000000000000000000000e+00, 2.8000000000000000000000000e+01, -5.6000000000000000000000000e+01, 7.0000000000000000000000000e+01, -5.6000000000000000000000000e+01, 2.8000000000000000000000000e+01, -8.0000000000000000000000000e+00, 1.0000000000000000000000000e+00 }
};

// Old version of the same matrix
//  const double deriv_matrix5[4][5] = {
//     { 8.333333333333333e-02, -6.666666666666666e-01,  0, 6.666666666666666e-01,  -8.333333333333333e-02 },   // first-deriv
//     {-8.333333333333333e-02,  1.3333333333333333, -2.5, 1.3333333333333333, -8.333333333333333e-02},  // second-deriv
//     {-0.5,     1.0,    0.0,  -1.0,    0.5},     // third-deriv
//     {1.0,    -4.0,    6.0,  -4.0,    1.0}       // fourth-deriv
//  };

#endif
